<?xml version="1.0" encoding="UTF-8"?>
<framework xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="schemas/frameworkDescriptionVersion1.1.4.xsd" frameworkId="org.wp-cli" name="WP-CLI_5/8/16 1:08 PM_wp" invoke="/Applications/XAMPP/bin/wp" alias="wp" enabled="true" version="2">
  <command>
    <name>cache add</name>
    <help><![CDATA[<strong>cache add</strong> &lt;key&gt; &lt;value&gt; [&lt;group&gt;] [&lt;expiration&gt;]<br/><br/>Add a value to the object cache.<br/>If a value already exists for the key, the value isn't added.<br><br>&lt;key&gt;<br>: Cache key.<br><br>&lt;value&gt;<br>: Value to add to the key.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>[&lt;expiration&gt;]<br>: Define how long to keep the value, in seconds. Defaults to 0 (as long as possible).<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value group[=null] expiration[=null]</params>
  </command>
  <command>
    <name>cache decr</name>
    <help><![CDATA[<strong>cache decr</strong> &lt;key&gt; [&lt;offset&gt;] [&lt;group&gt;]<br/><br/>Decrement a value in the object cache.<br/>&lt;key&gt;<br>: Cache key.<br><br>[&lt;offset&gt;]<br>: The amount by which to decrement the item's value. Default is 1.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key offset[=null] group[=null]</params>
  </command>
  <command>
    <name>cache delete</name>
    <help><![CDATA[<strong>cache delete</strong> &lt;key&gt; [&lt;group&gt;]<br/><br/>Remove a value from the object cache.<br/>&lt;key&gt;<br>: Cache key.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key group[=null]</params>
  </command>
  <command>
    <name>cache flush</name>
    <help><![CDATA[<strong>cache flush</strong> <br/><br/>Flush the object cache.<br/>For sites using a persistent object cache, because WordPress Multisite simply adds a blog id<br>to the cache key, flushing cache is typically a global operation.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cache get</name>
    <help><![CDATA[<strong>cache get</strong> &lt;key&gt; [&lt;group&gt;]<br/><br/>Get a value from the object cache.<br/>&lt;key&gt;<br>: Cache key.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key group[=null]</params>
  </command>
  <command>
    <name>cache incr</name>
    <help><![CDATA[<strong>cache incr</strong> &lt;key&gt; [&lt;offset&gt;] [&lt;group&gt;]<br/><br/>Increment a value in the object cache.<br/>&lt;key&gt;<br>: Cache key.<br><br>[&lt;offset&gt;]<br>: The amount by which to increment the item's value. Default is 1.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key offset[=null] group[=null]</params>
  </command>
  <command>
    <name>cache replace</name>
    <help><![CDATA[<strong>cache replace</strong> &lt;key&gt; &lt;value&gt; [&lt;group&gt;] [&lt;expiration&gt;]<br/><br/>Replace a value in the object cache, if the value already exists.<br/>&lt;key&gt;<br>: Cache key.<br><br>&lt;value&gt;<br>: Value to replace.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>[&lt;expiration&gt;]<br>: Define how long to keep the value, in seconds. Defaults to 0 (as long as possible).<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value group[=null] expiration[=null]</params>
  </command>
  <command>
    <name>cache set</name>
    <help><![CDATA[<strong>cache set</strong> &lt;key&gt; &lt;value&gt; [&lt;group&gt;] [&lt;expiration&gt;]<br/><br/>Set a value to the object cache, regardless of whether it already exists.<br/>&lt;key&gt;<br>: Cache key.<br><br>&lt;value&gt;<br>: Value to set on the key.<br><br>[&lt;group&gt;]<br>: Method for grouping data within the cache which allows the same key to be used across groups.<br><br>[&lt;expiration&gt;]<br>: Define how long to keep the value, in seconds. Defaults to 0 (as long as possible).<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value group[=null] expiration[=null]</params>
  </command>
  <command>
    <name>cache type</name>
    <help><![CDATA[<strong>cache type</strong> <br/><br/>Attempts to determine which object cache is being used.<br/>Note that the guesses made by this function are based on the WP_Object_Cache classes<br>that define the 3rd party object cache extension. Changes to those classes could render<br>problems with this function's ability to determine which object cache is being used.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cap add</name>
    <help><![CDATA[<strong>cap add</strong> &lt;role&gt; &lt;cap&gt;...<br/><br/>Add capabilities to a given role.<br/>&lt;role&gt;<br>: Key for the role.<br><br>&lt;cap&gt;...<br>: One or more capabilities to add.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role cap ...</params>
  </command>
  <command>
    <name>cap list</name>
    <help><![CDATA[<strong>cap list</strong> &lt;role&gt;<br/><br/>List capabilities for a given role.<br/>&lt;role&gt;<br>: Key for the role.<br><br>## EXAMPLES<br><br> # Display alphabetical list of bbPress moderator capabilities<br> wp cap list 'bbp_moderator' | sort<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role</params>
  </command>
  <command>
    <name>cap remove</name>
    <help><![CDATA[<strong>cap remove</strong> &lt;role&gt; &lt;cap&gt;...<br/><br/>Remove capabilities from a given role.<br/>&lt;role&gt;<br>: Key for the role.<br><br>&lt;cap&gt;...<br>: One or more capabilities to remove.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role cap ...</params>
  </command>
  <command>
    <name>cli check-update</name>
    <help><![CDATA[<strong>cli check-update</strong> [--patch] [--minor] [--major] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Check for update via Github API. Returns the available versions if there are updates, or empty if no update available.<br/>## OPTIONS<br><br>[--patch]<br>: Only list patch updates<br><br>[--minor]<br>: Only list minor updates<br><br>[--major]<br>: Only list major updates<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each update.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields. Defaults to version,update_type,package_url.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli cmd-dump</name>
    <help><![CDATA[<strong>cli cmd-dump</strong> <br/><br/>Dump the list of installed commands, as JSON.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli completions</name>
    <help><![CDATA[<strong>cli completions</strong> --line=&lt;line&gt; --point=&lt;point&gt;<br/><br/>Generate tab completion strings.<br/>## OPTIONS<br><br>--line=&lt;line&gt;<br>: The current command line to be executed<br><br>--point=&lt;point&gt;<br>: The index to the current cursor position relative to the beginning of the command<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli info</name>
    <help><![CDATA[<strong>cli info</strong> [--format=&lt;format&gt;]<br/><br/>Print various data about the CLI environment.<br/>## OPTIONS<br><br>[--format=&lt;format&gt;]<br>: Accepted values: json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli param-dump</name>
    <help><![CDATA[<strong>cli param-dump</strong> [--with-values] [--format=&lt;format&gt;]<br/><br/>Dump the list of global parameters, as JSON or in var_export format.<br/>## OPTIONS<br><br>[--with-values]<br>: Display current values also.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: var_export, json. Default: json.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli update</name>
    <help><![CDATA[<strong>cli update</strong> [--patch] [--minor] [--major] [--nightly] [--yes]<br/><br/>Fetch most recent update matching the requirements. Returns the available versions if there are updates, or empty if no update available.<br/>## OPTIONS<br><br>[--patch]<br>: Only perform patch updates<br><br>[--minor]<br>: Only perform minor updates<br><br>[--major]<br>: Only perform major updates<br><br>[--nightly]<br>: Update to the latest built version of the master branch. Potentially unstable.<br><br>[--yes]<br>: Do not prompt for confirmation<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cli version</name>
    <help><![CDATA[<strong>cli version</strong> <br/><br/>Print WP-CLI version.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>comment approve</name>
    <help><![CDATA[<strong>comment approve</strong> &lt;id&gt;...<br/><br/>Approve a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to approve.<br><br>## EXAMPLES<br><br> wp comment approve 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment count</name>
    <help><![CDATA[<strong>comment count</strong> [&lt;post-id&gt;]<br/><br/>Count comments, on whole blog or on a given post.<br/>## OPTIONS<br><br>[&lt;post-id&gt;]<br>: The ID of the post to count comments in.<br><br>## EXAMPLES<br><br> wp comment count<br> wp comment count 42<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>post-id[=null]</params>
  </command>
  <command>
    <name>comment create</name>
    <help><![CDATA[<strong>comment create</strong> [--&lt;field&gt;=&lt;value&gt;] [--porcelain]<br/><br/>Insert a comment.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Associative args for the new comment. See wp_insert_comment().<br><br>[--porcelain]<br>: Output just the new comment id.<br><br>## EXAMPLES<br><br> wp comment create --comment_post_ID=15 --comment_content="hello blog" --comment_author="wp-cli"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>comment delete</name>
    <help><![CDATA[<strong>comment delete</strong> &lt;id&gt;... [--force]<br/><br/>Delete a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of comments to delete.<br><br>[--force]<br>: Skip the trash bin.<br><br>## EXAMPLES<br><br> wp comment delete 1337 --force<br><br> wp comment delete 1337 2341 --force<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;id&gt;...</params>
  </command>
  <command>
    <name>comment exists</name>
    <help><![CDATA[<strong>comment exists</strong> &lt;id&gt;<br/><br/>Verify whether a comment exists.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the comment to check.<br><br>## EXAMPLES<br><br> wp comment exists 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>comment generate</name>
    <help><![CDATA[<strong>comment generate</strong> [--count=&lt;number&gt;] [--post_id=&lt;post-id&gt;]<br/><br/>Generate comments.<br/>## OPTIONS<br><br>[--count=&lt;number&gt;]<br>: How many comments to generate. Default: 100<br><br>[--post_id=&lt;post-id&gt;]<br>: Assign comments to a specific post.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>comment get</name>
    <help><![CDATA[<strong>comment get</strong> &lt;id&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a single comment.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The comment to get.<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole comment, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp comment get 1 --field=content<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>comment list</name>
    <help><![CDATA[<strong>comment list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of comments.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: One or more args to pass to WP_Comment_Query.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each comment.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each comment:<br><br>* comment_ID<br>* comment_post_ID<br>* comment_date<br>* comment_approved<br>* comment_author<br>* comment_author_email<br><br>These fields are optionally available:<br><br>* comment_author_url<br>* comment_author_IP<br>* comment_date_gmt<br>* comment_content<br>* comment_karma<br>* comment_agent<br>* comment_type<br>* comment_parent<br>* user_id<br><br>## EXAMPLES<br><br> wp comment list --field=ID<br><br> wp comment list --post_id=2<br><br> wp comment list --number=20 --status=approve<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>comment meta add</name>
    <help><![CDATA[<strong>comment meta add</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Add a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to create.<br><br>[&lt;value&gt;]<br>: The value of the meta field. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>comment meta delete</name>
    <help><![CDATA[<strong>comment meta delete</strong> &lt;id&gt; [&lt;key&gt;] [&lt;value&gt;] [--all]<br/><br/>Delete a meta field.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>[&lt;key&gt;]<br>: The name of the meta field to delete.<br><br>[&lt;value&gt;]<br>: The value to delete. If omitted, all rows with key will deleted.<br><br>[--all]<br>: Delete all meta for the object.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key[=null] value[=null]</params>
  </command>
  <command>
    <name>comment meta get</name>
    <help><![CDATA[<strong>comment meta get</strong> &lt;id&gt; &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get meta field value.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to get.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key</params>
  </command>
  <command>
    <name>comment meta list</name>
    <help><![CDATA[<strong>comment meta list</strong> &lt;id&gt; [--keys=&lt;keys&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all metadata associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>[--keys=&lt;keys&gt;]<br>: Limit output to metadata of specific keys.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields. Defaults to id,meta_key,meta_value.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>comment meta update</name>
    <help><![CDATA[<strong>comment meta update</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Update a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to update.<br><br>[&lt;value&gt;]<br>: The new value. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>comment recount</name>
    <help><![CDATA[<strong>comment recount</strong> &lt;id&gt;...<br/><br/>Recount the comment_count value for one or more posts.<br/>&lt;id&gt;...<br>: IDs for one or more posts to update.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment spam</name>
    <help><![CDATA[<strong>comment spam</strong> &lt;id&gt;...<br/><br/>Spam a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to mark as spam.<br><br>## EXAMPLES<br><br> wp comment spam 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment status</name>
    <help><![CDATA[<strong>comment status</strong> &lt;id&gt;<br/><br/>Get status of a comment.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the comment to check.<br><br>## EXAMPLES<br><br> wp comment status 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>comment trash</name>
    <help><![CDATA[<strong>comment trash</strong> &lt;id&gt;...<br/><br/>Trash a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to trash.<br><br>## EXAMPLES<br><br> wp comment trash 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment unapprove</name>
    <help><![CDATA[<strong>comment unapprove</strong> &lt;id&gt;...<br/><br/>Unapprove a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to unapprove.<br><br>## EXAMPLES<br><br> wp comment unapprove 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment unspam</name>
    <help><![CDATA[<strong>comment unspam</strong> &lt;id&gt;...<br/><br/>Unspam a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to unmark as spam.<br><br>## EXAMPLES<br><br> wp comment unspam 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment untrash</name>
    <help><![CDATA[<strong>comment untrash</strong> &lt;id&gt;...<br/><br/>Untrash a comment.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: The IDs of the comments to untrash.<br><br>## EXAMPLES<br><br> wp comment untrash 1337<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>comment update</name>
    <help><![CDATA[<strong>comment update</strong> &lt;id&gt;... --&lt;field&gt;=&lt;value&gt;<br/><br/>Update one or more comments.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of comments to update.<br><br>--&lt;field&gt;=&lt;value&gt;<br>: One or more fields to update. See wp_update_comment().<br><br>## EXAMPLES<br><br> wp comment update 123 --comment_author='That Guy'<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;id&gt;...</params>
  </command>
  <command>
    <name>comment url</name>
    <help><![CDATA[<strong>comment url</strong> &lt;id&gt;...<br/><br/>Get comment url<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of comments to get the URL.<br><br>## EXAMPLES<br><br> wp comment url 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>core check-update</name>
    <help><![CDATA[<strong>core check-update</strong> [--minor] [--major] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Check for update via Version Check API.<br/>Lists the most recent versions when there are updates available, or success message when up to date.<br><br>## OPTIONS<br><br>[--minor]<br>: Compare only the first two parts of the version number.<br><br>[--major]<br>: Compare only the first part of the version number.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each update.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields. Defaults to version,update_type,package_url.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, yaml. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core config</name>
    <help><![CDATA[<strong>core config</strong> --dbname=&lt;dbname&gt; --dbuser=&lt;dbuser&gt; [--dbpass=&lt;dbpass&gt;] [--dbhost=&lt;dbhost&gt;] [--dbprefix=&lt;dbprefix&gt;] [--dbcharset=&lt;dbcharset&gt;] [--dbcollate=&lt;dbcollate&gt;] [--locale=&lt;locale&gt;] [--extra-php] [--skip-salts] [--skip-check]<br/><br/>Generate a wp-config.php file.<br/>## OPTIONS<br><br>--dbname=&lt;dbname&gt;<br>: Set the database name.<br><br>--dbuser=&lt;dbuser&gt;<br>: Set the database user.<br><br>[--dbpass=&lt;dbpass&gt;]<br>: Set the database user password.<br><br>[--dbhost=&lt;dbhost&gt;]<br>: Set the database host. Default: 'localhost'<br><br>[--dbprefix=&lt;dbprefix&gt;]<br>: Set the database table prefix. Default: 'wp_'<br><br>[--dbcharset=&lt;dbcharset&gt;]<br>: Set the database charset. Default: 'utf8'<br><br>[--dbcollate=&lt;dbcollate&gt;]<br>: Set the database collation. Default: ''<br><br>[--locale=&lt;locale&gt;]<br>: Set the WPLANG constant. Defaults to $wp_local_package variable.<br><br>[--extra-php]<br>: If set, the command copies additional PHP code into wp-config.php from STDIN.<br><br>[--skip-salts]<br>: If set, keys and salts won't be generated, but should instead be passed via `--extra-php`.<br><br>[--skip-check]<br>: If set, the database connection is not checked.<br><br>## EXAMPLES<br><br> # Standard wp-config.php file<br> wp core config --dbname=testing --dbuser=wp --dbpass=securepswd --locale=ro_RO<br><br> # Enable WP_DEBUG and WP_DEBUG_LOG<br> wp core config --dbname=testing --dbuser=wp --dbpass=securepswd --extra-php &lt;&lt;PHP<br> define( 'WP_DEBUG', true );<br> define( 'WP_DEBUG_LOG', true );<br> PHP<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core download</name>
    <help><![CDATA[<strong>core download</strong> [--path=&lt;path&gt;] [--locale=&lt;locale&gt;] [--version=&lt;version&gt;] [--force]<br/><br/>Download core WordPress files.<br/>## OPTIONS<br><br>[--path=&lt;path&gt;]<br>: Specify the path in which to install WordPress.<br><br>[--locale=&lt;locale&gt;]<br>: Select which language you want to download.<br><br>[--version=&lt;version&gt;]<br>: Select which version you want to download.<br><br>[--force]<br>: Overwrites existing files, if present.<br><br>## EXAMPLES<br><br> wp core download --locale=nl_NL<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core install</name>
    <help><![CDATA[<strong>core install</strong> --url=&lt;url&gt; --title=&lt;site-title&gt; --admin_user=&lt;username&gt; --admin_password=&lt;password&gt; --admin_email=&lt;email&gt; [--skip-email]<br/><br/>Create the WordPress tables in the database.<br/>## OPTIONS<br><br>--url=&lt;url&gt;<br>: The address of the new site.<br><br>--title=&lt;site-title&gt;<br>: The title of the new site.<br><br>--admin_user=&lt;username&gt;<br>: The name of the admin user.<br><br>--admin_password=&lt;password&gt;<br>: The password for the admin user.<br><br>--admin_email=&lt;email&gt;<br>: The email address for the admin user.<br><br>[--skip-email]<br>: Don't send an email notification to the new admin user.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core is-installed</name>
    <help><![CDATA[<strong>core is-installed</strong> [--network]<br/><br/>Determine if the WordPress tables are installed.<br/>[--network]<br>: Check if this is a multisite install<br><br>## EXAMPLES<br><br> if ! $(wp core is-installed); then<br> wp core install<br> fi<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core language activate</name>
    <help><![CDATA[<strong>core language activate</strong> &lt;language&gt;<br/><br/>Activate a given language.<br/>&lt;language&gt;<br>: Language code to activate.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>language</params>
  </command>
  <command>
    <name>core language install</name>
    <help><![CDATA[<strong>core language install</strong> &lt;language&gt; [--activate]<br/><br/>Install a given language.<br/>&lt;language&gt;<br>: Language code to install.<br><br>[--activate]<br>: If set, the language will be activated immediately after install.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>language</params>
  </command>
  <command>
    <name>core language list</name>
    <help><![CDATA[<strong>core language list</strong> [--field=&lt;field&gt;] [--&lt;field&gt;=&lt;value&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all languages available.<br/>[--field=&lt;field&gt;]<br>: Display the value of a single field<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter results by key=value pairs.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each translation:<br><br>* language<br>* english_name<br>* native_name<br>* status<br>* update<br>* updated<br><br>These fields are optionally available:<br><br>* version<br>* package<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core language uninstall</name>
    <help><![CDATA[<strong>core language uninstall</strong> &lt;language&gt;<br/><br/>Uninstall a given language.<br/>&lt;language&gt;<br>: Language code to uninstall.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>language</params>
  </command>
  <command>
    <name>core language update</name>
    <help><![CDATA[<strong>core language update</strong> [--dry-run]<br/><br/>Updates the active translation of core, plugins, and themes.<br/>[--dry-run]<br>: Preview which translations would be updated.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core multisite-convert</name>
    <help><![CDATA[<strong>core multisite-convert</strong> [--title=&lt;network-title&gt;] [--base=&lt;url-path&gt;] [--subdomains]<br/><br/>Transform a single-site install into a multi-site install.<br/>## OPTIONS<br><br>[--title=&lt;network-title&gt;]<br>: The title of the new network.<br><br>[--base=&lt;url-path&gt;]<br>: Base path after the domain name that each site url will start with.<br>Default: '/'<br><br>[--subdomains]<br>: If passed, the network will use subdomains, instead of subdirectories. Doesn't work with 'localhost'.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core multisite-install</name>
    <help><![CDATA[<strong>core multisite-install</strong> [--url=&lt;url&gt;] [--base=&lt;url-path&gt;] [--subdomains] --title=&lt;site-title&gt; --admin_user=&lt;username&gt; --admin_password=&lt;password&gt; --admin_email=&lt;email&gt; [--skip-email]<br/><br/>Install multisite from scratch.<br/>## OPTIONS<br><br>[--url=&lt;url&gt;]<br>: The address of the new site.<br><br>[--base=&lt;url-path&gt;]<br>: Base path after the domain name that each site url in the network will start with.<br>Default: '/'<br><br>[--subdomains]<br>: If passed, the network will use subdomains, instead of subdirectories. Doesn't work with 'localhost'.<br><br>--title=&lt;site-title&gt;<br>: The title of the new site.<br><br>--admin_user=&lt;username&gt;<br>: The name of the admin user. Default: 'admin'<br><br>--admin_password=&lt;password&gt;<br>: The password for the admin user.<br><br>--admin_email=&lt;email&gt;<br>: The email address for the admin user.<br><br>[--skip-email]<br>: Don't send an email notification to the new admin user.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core update</name>
    <help><![CDATA[<strong>core update</strong> [&lt;zip&gt;] [--minor] [--version=&lt;version&gt;] [--force] [--locale=&lt;locale&gt;]<br/><br/>Update WordPress.<br/>## OPTIONS<br><br>[&lt;zip&gt;]<br>: Path to zip file to use, instead of downloading from wordpress.org.<br><br>[--minor]<br>: Only perform updates for minor releases (e.g. update from WP 4.3 to 4.3.3 instead of 4.4.2).<br><br>[--version=&lt;version&gt;]<br>: Update to a specific version, instead of to the latest version.<br><br>[--force]<br>: Update even when installed WP version is greater than the requested version.<br><br>[--locale=&lt;locale&gt;]<br>: Select which language you want to download.<br><br>## EXAMPLES<br><br> wp core update<br><br> wp core update --version=3.8 ../latest.zip<br><br> wp core update --version=3.1 --force<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>zip[=null]</params>
  </command>
  <command>
    <name>core update-db</name>
    <help><![CDATA[<strong>core update-db</strong> [--network] [--dry-run]<br/><br/>Update the WordPress database.<br/>[--network]<br>: Update databases for all sites on a network<br><br>[--dry-run]<br>: Compare database versions without performing the update.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core verify-checksums</name>
    <help><![CDATA[<strong>core verify-checksums</strong> [--version=&lt;version&gt;] [--locale=&lt;locale&gt;]<br/><br/>Verify WordPress files against WordPress.org's checksums.<br/>Specify version to verify checksums without loading WordPress.<br><br>[--version=&lt;version&gt;]<br>: Verify checksums against a specific version of WordPress.<br><br>[--locale=&lt;locale&gt;]<br>: Verify checksums against a specific locale of WordPress.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>core version</name>
    <help><![CDATA[<strong>core version</strong> [--extra]<br/><br/>Display the WordPress version.<br/>## OPTIONS<br><br>[--extra]<br>: Show extended version information.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cron event delete</name>
    <help><![CDATA[<strong>cron event delete</strong> &lt;hook&gt;<br/><br/>Delete the next scheduled cron event for the given hook.<br/>## OPTIONS<br><br>&lt;hook&gt;<br>: The hook name<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>hook</params>
  </command>
  <command>
    <name>cron event list</name>
    <help><![CDATA[<strong>cron event list</strong> [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List scheduled cron events.<br/>## OPTIONS<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, ids, yaml. Default: table.<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each cron event:<br>* hook<br>* next_run_gmt<br>* next_run_relative<br>* recurrence<br><br>These fields are optionally available:<br>* time<br>* sig<br>* args<br>* schedule<br>* interval<br>* next_run<br><br>## EXAMPLES<br><br> wp cron event list<br><br> wp cron event list --fields=hook,next_run --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cron event run</name>
    <help><![CDATA[<strong>cron event run</strong> [&lt;hook&gt;...] [--all]<br/><br/>Run the next scheduled cron event for the given hook.<br/>## OPTIONS<br><br>[&lt;hook&gt;...]<br>: One or more hooks to run.<br><br>[--all]<br>: Run all hooks.<br><br>## EXAMPLES<br><br> # Run all cron events due right now<br> wp cron event run $( wp cron event list --fields=hook,next_run_relative --format=csv | awk -F, '$2=="now" {print $1}' )<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;hook&gt;...[=null]</params>
  </command>
  <command>
    <name>cron event schedule</name>
    <help><![CDATA[<strong>cron event schedule</strong> &lt;hook&gt; [&lt;next-run&gt;] [&lt;recurrence&gt;] [--&lt;field&gt;=&lt;value&gt;]<br/><br/>Schedule a new cron event.<br/>## OPTIONS<br><br>&lt;hook&gt;<br>: The hook name<br><br>[&lt;next-run&gt;]<br>: A Unix timestamp or an English textual datetime description compatible with `strtotime()`. Defaults to now.<br><br>[&lt;recurrence&gt;]<br>: How often the event should recur. See `wp cron schedule list` for available schedule names. Defaults to no recurrence.<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Associative args for the event.<br><br>## EXAMPLES<br><br> wp cron event schedule cron_test<br><br> wp cron event schedule cron_test now hourly<br><br> wp cron event schedule cron_test '+1 hour' --foo=1 --bar=2<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>hook next-run[=null] recurrence[=null]</params>
  </command>
  <command>
    <name>cron schedule list</name>
    <help><![CDATA[<strong>cron schedule list</strong> [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List available cron schedules.<br/>## OPTIONS<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, ids, yaml. Default: table.<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each cron schedule:<br><br>* name<br>* display<br>* interval<br><br>There are no additional fields.<br><br>## EXAMPLES<br><br> wp cron schedule list<br><br> wp cron schedule list --fields=name --format=ids<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>cron test</name>
    <help><![CDATA[<strong>cron test</strong> <br/><br/>Test the WP Cron spawning system and report back its status.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db cli</name>
    <help><![CDATA[<strong>db cli</strong> <br/><br/>Open a mysql console using the WordPress credentials.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db create</name>
    <help><![CDATA[<strong>db create</strong> <br/><br/>Create the database, as specified in wp-config.php<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db drop</name>
    <help><![CDATA[<strong>db drop</strong> [--yes]<br/><br/>Delete the database.<br/>## OPTIONS<br><br>[--yes]<br>: Answer yes to the confirmation message.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db export</name>
    <help><![CDATA[<strong>db export</strong> [&lt;file&gt;] [--&lt;field&gt;=&lt;value&gt;] [--tables=&lt;tables&gt;]<br/><br/>Exports the database to a file or to STDOUT.<br/>## OPTIONS<br><br>[&lt;file&gt;]<br>: The name of the SQL file to export. If '-', then outputs to STDOUT. If omitted, it will be '{dbname}.sql'.<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Extra arguments to pass to mysqldump<br><br>[--tables=&lt;tables&gt;]<br>: The comma separated list of specific tables to export. Excluding this parameter will export all tables in the database.<br><br>## EXAMPLES<br><br> wp db export --add-drop-table<br> wp db export --tables=wp_options,wp_users<br><br> # Export all tables matching a wildcard<br> wp db export --tables=$(wp db tables 'wp_user*' --format=csv)<br><br> # Export all tables matching prefix<br> wp db export --tables=$(wp db tables --all-tables-with-prefix --format=csv)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>file[=null]</params>
  </command>
  <command>
    <name>db import</name>
    <help><![CDATA[<strong>db import</strong> [&lt;file&gt;]<br/><br/>Import database from a file or from STDIN.<br/>## OPTIONS<br><br>[&lt;file&gt;]<br>: The name of the SQL file to import. If '-', then reads from STDIN. If omitted, it will look for '{dbname}.sql'.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>file[=null]</params>
  </command>
  <command>
    <name>db optimize</name>
    <help><![CDATA[<strong>db optimize</strong> <br/><br/>Optimize the database.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db query</name>
    <help><![CDATA[<strong>db query</strong> [&lt;sql&gt;]<br/><br/>Execute a query against the database.<br/>## OPTIONS<br><br>[&lt;sql&gt;]<br>: A SQL query. If not passed, will try to read from STDIN.<br><br>## EXAMPLES<br><br> # execute a query stored in a file<br> wp db query &lt; debug.sql<br><br> # check all tables in the database<br> wp db query "CHECK TABLE $(wp db tables | paste -s -d',');"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>sql[=null]</params>
  </command>
  <command>
    <name>db repair</name>
    <help><![CDATA[<strong>db repair</strong> <br/><br/>Repair the database.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db reset</name>
    <help><![CDATA[<strong>db reset</strong> [--yes]<br/><br/>Remove all tables from the database.<br/>## OPTIONS<br><br>[--yes]<br>: Answer yes to the confirmation message.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>db tables</name>
    <help><![CDATA[<strong>db tables</strong> [&lt;table&gt;...] [--scope=&lt;scope&gt;] [--network] [--all-tables-with-prefix] [--all-tables] [--format=&lt;format&gt;]<br/><br/>List the database tables.<br/>Defaults to all tables registered to $wpdb.<br><br>## OPTIONS<br><br>[&lt;table&gt;...]<br>: List tables based on wildcard search, e.g. 'wp_*_options' or 'wp_post?'.<br><br>[--scope=&lt;scope&gt;]<br>: Can be all, global, ms_global, blog, or old tables. Defaults to all.<br><br>[--network]<br>: List all the tables in a multisite install. Overrides --scope=&lt;scope&gt;.<br><br>[--all-tables-with-prefix]<br>: List all tables that match the table prefix even if not registered on $wpdb. Overrides --network.<br><br>[--all-tables]<br>: List all tables in the database, regardless of the prefix, and even if not registered on $wpdb. Overrides --all-tables-with-prefix.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: list, csv. Default: list<br><br>## EXAMPLES<br><br> # Export only tables for a single site<br> wp db export --tables=$(wp db tables --url=sub.example.com --format=csv)<br><br> # Export all tables matching prefix<br> wp db export --tables=$(wp db tables --all-tables-with-prefix --format=csv)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;table&gt;...[=null]</params>
  </command>
  <command>
    <name>eval</name>
    <help><![CDATA[<strong>eval</strong> &lt;php-code&gt; [--skip-wordpress]<br/><br/>Execute arbitrary PHP code.<br/>&lt;php-code&gt;<br>: The code to execute, as a string.<br><br>[--skip-wordpress]<br>: Execute code without loading WordPress.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>php-code</params>
  </command>
  <command>
    <name>eval-file</name>
    <help><![CDATA[<strong>eval-file</strong> &lt;file&gt; [&lt;arg&gt;...] [--skip-wordpress]<br/><br/>Load and execute a PHP file.<br/>## OPTIONS<br><br>&lt;file&gt;<br>: The path to the PHP file to execute.<br><br>[&lt;arg&gt;...]<br>: One or more arguments to pass to the file. They are placed in the $args variable.<br><br>[--skip-wordpress]<br>: Load and execute file without loading WordPress.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>file &lt;arg&gt;...[=null]</params>
  </command>
  <command>
    <name>export</name>
    <help><![CDATA[<strong>export</strong> [--dir=&lt;dirname&gt;] [--skip_comments] [--max_file_size=&lt;MB&gt;] [--start_date=&lt;date&gt;] [--end_date=&lt;date&gt;] [--post_type=&lt;post-type&gt;] [--post_type__not_in=&lt;post-type&gt;] [--post__in=&lt;pid&gt;] [--start_id=&lt;pid&gt;] [--author=&lt;author&gt;] [--category=&lt;name&gt;] [--post_status=&lt;status&gt;] [--filename_format=&lt;format&gt;]<br/><br/>Export content to a WXR file.<br/>## OPTIONS<br><br>[--dir=&lt;dirname&gt;]<br>: Full path to directory where WXR export files should be stored. Defaults<br>to current working directory.<br><br>[--skip_comments]<br>: Don't export comments.<br><br>[--max_file_size=&lt;MB&gt;]<br>: A single export file should have this many megabytes.<br><br>## FILTERS<br><br>[--start_date=&lt;date&gt;]<br>: Export only posts published after this date, in format YYYY-MM-DD.<br><br>[--end_date=&lt;date&gt;]<br>: Export only posts published before this date, in format YYYY-MM-DD.<br><br>[--post_type=&lt;post-type&gt;]<br>: Export only posts with this post_type. Separate multiple post types with a<br>comma. Defaults to all.<br><br>[--post_type__not_in=&lt;post-type&gt;]<br>: Export all post types except those identified. Seperate multiple post types<br>with a comma. Defaults to none.<br><br>[--post__in=&lt;pid&gt;]<br>: Export all posts specified as a comma- or space-separated list of IDs.<br><br>[--start_id=&lt;pid&gt;]<br>: Export only posts with IDs greater than or equal to this post ID.<br><br>[--author=&lt;author&gt;]<br>: Export only posts by this author. Can be either user login or user ID.<br><br>[--category=&lt;name&gt;]<br>: Export only posts in this category.<br><br>[--post_status=&lt;status&gt;]<br>: Export only posts with this status.<br><br>[--filename_format=&lt;format&gt;]<br>: Use a custom format for export filenames. Defaults to '{site}.wordpress.{date}.{n}.xml'.<br><br>## EXAMPLES<br><br> wp export --dir=/tmp/ --user=admin --post_type=post --start_date=2011-01-01 --end_date=2011-12-31<br><br> wp export --dir=/tmp/ --post__in=123,124,125<br><br> # Export a random subset of content<br> wp export --post__in=$(wp post list --post_type=post --orderby=rand --posts_per_page=8 --format=ids)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>help</name>
    <help><![CDATA[<strong>help</strong> [&lt;command&gt;...]<br/><br/>Get help on WP-CLI, or on a specific. command.<br/>[&lt;command&gt;...]<br>: Get help on a specific command.<br><br>## EXAMPLES<br><br> # get help for `core` command<br> wp help core<br><br> # get help for `core download` subcommand<br> wp help core download<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;command&gt;...[=null]</params>
  </command>
  <command>
    <name>import</name>
    <help><![CDATA[<strong>import</strong> &lt;file&gt;... --authors=&lt;authors&gt; [--skip=&lt;data-type&gt;]<br/><br/>Import content from a WXR file.<br/>## OPTIONS<br><br>&lt;file&gt;...<br>: Path to one or more valid WXR files for importing. Directories are also accepted.<br><br>--authors=&lt;authors&gt;<br>: How the author mapping should be handled. Options are 'create', 'mapping.csv', or 'skip'. The first will create any non-existent users from the WXR file. The second will read author mapping associations from a CSV, or create a CSV for editing if the file path doesn't exist. The CSV requires two columns, and a header row like "old_user_login,new_user_login". The last option will skip any author mapping.<br><br>[--skip=&lt;data-type&gt;]<br>: Skip importing specific data. Supported options are: 'attachment' and 'image_resize' (skip time-consuming thumbnail generation).<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;file&gt;...</params>
  </command>
  <command>
    <name>media import</name>
    <help><![CDATA[<strong>media import</strong> &lt;file&gt;... [--post_id=&lt;post_id&gt;] [--title=&lt;title&gt;] [--caption=&lt;caption&gt;] [--alt=&lt;alt_text&gt;] [--desc=&lt;description&gt;] [--featured_image] [--porcelain]<br/><br/>Create attachments from local files or from URLs.<br/>## OPTIONS<br><br>&lt;file&gt;...<br>: Path to file or files to be imported. Supports the glob(3) capabilities of the current shell.<br> If file is recognized as a URL (for example, with a scheme of http or ftp), the file will be<br> downloaded to a temp file before being sideloaded.<br><br>[--post_id=&lt;post_id&gt;]<br>: ID of the post to attach the imported files to<br><br>[--title=&lt;title&gt;]<br>: Attachment title (post title field)<br><br>[--caption=&lt;caption&gt;]<br>: Caption for attachent (post excerpt field)<br><br>[--alt=&lt;alt_text&gt;]<br>: Alt text for image (saved as post meta)<br><br>[--desc=&lt;description&gt;]<br>: "Description" field (post content) of attachment post<br><br>[--featured_image]<br>: If set, set the imported image as the Featured Image of the post its attached to.<br><br>[--porcelain]<br>: Output just the new attachment id.<br><br>## EXAMPLES<br><br> # Import all jpgs in the current user's "Pictures" directory, not attached to any post<br> wp media import ~/Pictures/**\/*.jpg<br><br> # Import a local image and set it to be the post thumbnail for a post<br> wp media import ~/Downloads/image.png --post_id=123 --title="A downloaded picture" --featured_image<br><br> # Import an image from the web<br> wp media import http://s.wordpress.org/style/images/wp-header-logo.png --title='The WordPress logo' --alt="Semantic personal publishing"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;file&gt;...</params>
  </command>
  <command>
    <name>media regenerate</name>
    <help><![CDATA[<strong>media regenerate</strong> [&lt;attachment-id&gt;...] [--skip-delete] [--only-missing] [--yes]<br/><br/>Regenerate thumbnail(s).<br/>## OPTIONS<br><br>[&lt;attachment-id&gt;...]<br>: One or more IDs of the attachments to regenerate.<br><br>[--skip-delete]<br>: Skip deletion of the original thumbnails. If your thumbnails are linked from sources outside your control, it's likely best to leave them around. Defaults to false.<br><br>[--only-missing]<br>: Only generate thumbnails for images missing image sizes.<br><br>[--yes]<br>: Answer yes to the confirmation message.<br><br>## EXAMPLES<br><br> # re-generate all thumbnails, without confirmation<br> wp media regenerate --yes<br><br> # re-generate all thumbnails that have IDs between 1000 and 2000<br> seq 1000 2000 | xargs wp media regenerate<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;attachment-id&gt;...[=null]</params>
  </command>
  <command>
    <name>menu create</name>
    <help><![CDATA[<strong>menu create</strong> &lt;menu-name&gt; [--porcelain]<br/><br/>Create a new menu<br/>&lt;menu-name&gt;<br>: A descriptive name for the menu<br><br>[--porcelain]<br>: Output just the new menu id.<br><br>## EXAMPLES<br><br> wp menu create "My Menu"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu-name</params>
  </command>
  <command>
    <name>menu delete</name>
    <help><![CDATA[<strong>menu delete</strong> &lt;menu&gt;...<br/><br/>Delete one or more menus<br/>&lt;menu&gt;...<br>: The name, slug, or term ID for the menu(s)<br><br>## EXAMPLES<br><br> wp menu delete "My Menu"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu ...</params>
  </command>
  <command>
    <name>menu item add-custom</name>
    <help><![CDATA[<strong>menu item add-custom</strong> &lt;menu&gt; &lt;title&gt; &lt;link&gt; [--description=&lt;description&gt;] [--attr-title=&lt;attr-title&gt;] [--target=&lt;target&gt;] [--classes=&lt;classes&gt;] [--position=&lt;position&gt;] [--parent-id=&lt;parent-id&gt;] [--porcelain]<br/><br/>Add a custom menu item<br/>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>&lt;title&gt;<br>: Title for the link<br><br>&lt;link&gt;<br>: Target URL for the link<br><br>[--description=&lt;description&gt;]<br>: Set a custom description for the menu item<br><br>[--attr-title=&lt;attr-title&gt;]<br>: Set a custom title attribute for the menu item<br><br>[--target=&lt;target&gt;]<br>: Set a custom link target for the menu item<br><br>[--classes=&lt;classes&gt;]<br>: Set a custom link classes for the menu item<br><br>[--position=&lt;position&gt;]<br>: Specify the position of this menu item.<br><br>[--parent-id=&lt;parent-id&gt;]<br>: Make this menu item a child of another menu item<br><br>[--porcelain]<br>: Output just the new menu item id.<br><br>## EXAMPLES<br><br> wp menu item add-custom sidebar-menu Apple http://apple.com --porcelain<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu title link</params>
  </command>
  <command>
    <name>menu item add-post</name>
    <help><![CDATA[<strong>menu item add-post</strong> &lt;menu&gt; &lt;post-id&gt; [--title=&lt;title&gt;] [--link=&lt;link&gt;] [--description=&lt;description&gt;] [--attr-title=&lt;attr-title&gt;] [--target=&lt;target&gt;] [--classes=&lt;classes&gt;] [--position=&lt;position&gt;] [--parent-id=&lt;parent-id&gt;] [--porcelain]<br/><br/>Add a post as a menu item<br/>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>&lt;post-id&gt;<br>: Post ID to add to the menu<br><br>[--title=&lt;title&gt;]<br>: Set a custom title for the menu item<br><br>[--link=&lt;link&gt;]<br>: Set a custom url for the menu item<br><br>[--description=&lt;description&gt;]<br>: Set a custom description for the menu item<br><br>[--attr-title=&lt;attr-title&gt;]<br>: Set a custom title attribute for the menu item<br><br>[--target=&lt;target&gt;]<br>: Set a custom link target for the menu item<br><br>[--classes=&lt;classes&gt;]<br>: Set a custom link classes for the menu item<br><br>[--position=&lt;position&gt;]<br>: Specify the position of this menu item.<br><br>[--parent-id=&lt;parent-id&gt;]<br>: Make this menu item a child of another menu item<br><br>[--porcelain]<br>: Output just the new menu item id.<br><br>## EXAMPLES<br><br> wp menu item add-post sidebar-menu 33 --title="Custom Test Post"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu post-id</params>
  </command>
  <command>
    <name>menu item add-term</name>
    <help><![CDATA[<strong>menu item add-term</strong> &lt;menu&gt; &lt;taxonomy&gt; &lt;term-id&gt; [--title=&lt;title&gt;] [--link=&lt;link&gt;] [--description=&lt;description&gt;] [--attr-title=&lt;attr-title&gt;] [--target=&lt;target&gt;] [--classes=&lt;classes&gt;] [--position=&lt;position&gt;] [--parent-id=&lt;parent-id&gt;] [--porcelain]<br/><br/>Add a taxonomy term as a menu item<br/>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>&lt;taxonomy&gt;<br>: Taxonomy of the term to be added<br><br>&lt;term-id&gt;<br>: Term ID of the term to be added<br><br>[--title=&lt;title&gt;]<br>: Set a custom title for the menu item<br><br>[--link=&lt;link&gt;]<br>: Set a custom url for the menu item<br><br>[--description=&lt;description&gt;]<br>: Set a custom description for the menu item<br><br>[--attr-title=&lt;attr-title&gt;]<br>: Set a custom title attribute for the menu item<br><br>[--target=&lt;target&gt;]<br>: Set a custom link target for the menu item<br><br>[--classes=&lt;classes&gt;]<br>: Set a custom link classes for the menu item<br><br>[--position=&lt;position&gt;]<br>: Specify the position of this menu item.<br><br>[--parent-id=&lt;parent-id&gt;]<br>: Make this menu item a child of another menu item<br><br>[--porcelain]<br>: Output just the new menu item id.<br><br>## EXAMPLES<br><br> wp menu item add-term sidebar-menu post_tag 24<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu taxonomy term-id</params>
  </command>
  <command>
    <name>menu item delete</name>
    <help><![CDATA[<strong>menu item delete</strong> &lt;db-id&gt;...<br/><br/>Delete one or more items from a menu<br/>&lt;db-id&gt;...<br>: Database ID for the menu item(s).<br><br>## EXAMPLES<br><br> wp menu item delete 45<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>db-id ...</params>
  </command>
  <command>
    <name>menu item list</name>
    <help><![CDATA[<strong>menu item list</strong> &lt;menu&gt; [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of items associated with a menu<br/>## OPTIONS<br><br>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each menu item:<br><br>* db_id<br>* type<br>* title<br>* link<br>* position<br><br>These fields are optionally available:<br><br>* menu_item_parent<br>* object_id<br>* object<br>* type<br>* type_label<br>* target<br>* attr_title<br>* description<br>* classes<br>* xfn<br><br>## EXAMPLES<br><br> wp menu item list &lt;menu&gt;<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu</params>
  </command>
  <command>
    <name>menu item update</name>
    <help><![CDATA[<strong>menu item update</strong> &lt;db-id&gt; [--title=&lt;title&gt;] [--link=&lt;link&gt;] [--description=&lt;description&gt;] [--attr-title=&lt;attr-title&gt;] [--target=&lt;target&gt;] [--classes=&lt;classes&gt;] [--position=&lt;position&gt;] [--parent-id=&lt;parent-id&gt;]<br/><br/>Update a menu item<br/>&lt;db-id&gt;<br>: Database ID for the menu item.<br><br>[--title=&lt;title&gt;]<br>: Set a custom title for the menu item<br><br>[--link=&lt;link&gt;]<br>: Set a custom url for the menu item<br><br>[--description=&lt;description&gt;]<br>: Set a custom description for the menu item<br><br>[--attr-title=&lt;attr-title&gt;]<br>: Set a custom title attribute for the menu item<br><br>[--target=&lt;target&gt;]<br>: Set a custom link target for the menu item<br><br>[--classes=&lt;classes&gt;]<br>: Set a custom link classes for the menu item<br><br>[--position=&lt;position&gt;]<br>: Specify the position of this menu item.<br><br>[--parent-id=&lt;parent-id&gt;]<br>: Make this menu item a child of another menu item<br><br>## EXAMPLES<br><br> wp menu item update 45 --title=WordPress --link='http://wordpress.org' --target=_blank --position=2<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>db-id</params>
  </command>
  <command>
    <name>menu list</name>
    <help><![CDATA[<strong>menu list</strong> [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of menus.<br/>## OPTIONS<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each menu:<br><br>* term_id<br>* name<br>* slug<br>* count<br><br>These fields are optionally available:<br><br>* term_group<br>* term_taxonomy_id<br>* taxonomy<br>* description<br>* parent<br>* locations<br><br>## EXAMPLES<br><br> wp menu list<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>menu location assign</name>
    <help><![CDATA[<strong>menu location assign</strong> &lt;menu&gt; &lt;location&gt;<br/><br/>Assign a location to a menu<br/>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>&lt;location&gt;<br>: Location's slug<br><br>## EXAMPLES<br><br> wp menu location assign primary-menu primary<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu location</params>
  </command>
  <command>
    <name>menu location list</name>
    <help><![CDATA[<strong>menu location list</strong> [--format=&lt;format&gt;]<br/><br/>List locations for the current theme.<br/>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each location:<br><br>* name<br>* description<br><br>## EXAMPLES<br><br> wp menu location list<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>menu location remove</name>
    <help><![CDATA[<strong>menu location remove</strong> &lt;menu&gt; &lt;location&gt;<br/><br/>Remove a location from a menu<br/>&lt;menu&gt;<br>: The name, slug, or term ID for the menu<br><br>&lt;location&gt;<br>: Location's slug<br><br>## EXAMPLES<br><br> wp menu location remove primary-menu primary<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>menu location</params>
  </command>
  <command>
    <name>network meta add</name>
    <help><![CDATA[<strong>network meta add</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Add a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to create.<br><br>[&lt;value&gt;]<br>: The value of the meta field. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>network meta delete</name>
    <help><![CDATA[<strong>network meta delete</strong> &lt;id&gt; [&lt;key&gt;] [&lt;value&gt;] [--all]<br/><br/>Delete a meta field.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>[&lt;key&gt;]<br>: The name of the meta field to delete.<br><br>[&lt;value&gt;]<br>: The value to delete. If omitted, all rows with key will deleted.<br><br>[--all]<br>: Delete all meta for the object.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key[=null] value[=null]</params>
  </command>
  <command>
    <name>network meta get</name>
    <help><![CDATA[<strong>network meta get</strong> &lt;id&gt; &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get meta field value.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to get.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key</params>
  </command>
  <command>
    <name>network meta list</name>
    <help><![CDATA[<strong>network meta list</strong> &lt;id&gt; [--keys=&lt;keys&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all metadata associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>[--keys=&lt;keys&gt;]<br>: Limit output to metadata of specific keys.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields. Defaults to id,meta_key,meta_value.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>network meta update</name>
    <help><![CDATA[<strong>network meta update</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Update a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to update.<br><br>[&lt;value&gt;]<br>: The new value. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>option add</name>
    <help><![CDATA[<strong>option add</strong> &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;] [--autoload=&lt;autoload&gt;]<br/><br/>Add an option.<br/>## OPTIONS<br><br>&lt;key&gt;<br>: The name of the option to add.<br><br>[&lt;value&gt;]<br>: The value of the option to add. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>[--autoload=&lt;autoload&gt;]<br>: Should this option be automatically loaded. Accepted values: yes, no. Default: yes<br><br>## EXAMPLES<br><br> # Create an option by reading a JSON file<br> wp option add my_option --format=json &lt; config.json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value[=null]</params>
  </command>
  <command>
    <name>option delete</name>
    <help><![CDATA[<strong>option delete</strong> &lt;key&gt;<br/><br/>Delete an option.<br/>&lt;key&gt;<br>: Key for the option.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key</params>
  </command>
  <command>
    <name>option get</name>
    <help><![CDATA[<strong>option get</strong> &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get an option.<br/>&lt;key&gt;<br>: Key for the option<br><br>[--format=&lt;format&gt;]<br>: Get value as var_export() or JSON. Default: var_export()<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key</params>
  </command>
  <command>
    <name>option list</name>
    <help><![CDATA[<strong>option list</strong> [--search=&lt;pattern&gt;] [--autoload=&lt;value&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List options.<br/>[--search=&lt;pattern&gt;]<br>: Use wildcards ( * and ? ) to match option name.<br><br>[--autoload=&lt;value&gt;]<br>: Match only autoload options when value is on, and only not-autoload option when off.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. total_bytes displays the total size of matching options in bytes. Accepted values: table, json, csv, count, total_bytes. Default: table<br><br>## EXAMPLES<br><br> # Get the total size of all autoload options<br> wp option list --autoload=on --format=total_bytes<br><br> # Find biggest transients<br> wp option list --search="*_transient_*" --fields=option_name,size_bytes | sort -n -k 2 | tail<br><br> # List all options begining with "i2f_"<br> wp option list --search "i2f_*"<br><br>## AVAILABLE FIELDS<br><br>This field will be displayed by default for each matching option:<br><br>* option_name<br>* option_value<br><br>These fields are optionally available:<br><br>* autoload<br>* size_bytes<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>option update</name>
    <help><![CDATA[<strong>option update</strong> &lt;key&gt; [&lt;value&gt;] [--autoload=&lt;autoload&gt;] [--format=&lt;format&gt;]<br/><br/>Update an option.<br/>## OPTIONS<br><br>&lt;key&gt;<br>: The name of the option to add.<br><br>[&lt;value&gt;]<br>: The new value. If ommited, the value is read from STDIN.<br><br>[--autoload=&lt;autoload&gt;]<br>: Requires WP 4.2. Should this option be automatically loaded. Accepted values: yes, no. Default: yes<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## EXAMPLES<br><br> # Update an option by reading from a file<br> wp option update my_option &lt; value.txt<br><br> # Update one option on multiple sites using xargs<br> wp site list --field=url | xargs -n1 -I {} sh -c 'wp --url={} option update &lt;key&gt; &lt;value&gt;'<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value[=null]</params>
  </command>
  <command>
    <name>package browse</name>
    <help><![CDATA[<strong>package browse</strong> [--format=&lt;format&gt;]<br/><br/>Browse WP-CLI packages available for installation.<br/>Lists packages available for installation from the [Package Index](http://wp-cli.org/package-index/).<br><br>## OPTIONS<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml, ids. Default: table.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>package install</name>
    <help><![CDATA[<strong>package install</strong> &lt;name&gt;<br/><br/>Install a WP-CLI package.<br/>## OPTIONS<br><br>&lt;name&gt;<br>: Name of the package to install. Can optionally contain a version constraint.<br><br>## EXAMPLES<br><br> # install the latest development version<br> wp package install wp-cli/server-command<br><br> # install the latest stable version<br> wp package install wp-cli/server-command:@stable<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>package list</name>
    <help><![CDATA[<strong>package list</strong> [--format=&lt;format&gt;]<br/><br/>List installed WP-CLI packages.<br/>## OPTIONS<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml, ids. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>package path</name>
    <help><![CDATA[<strong>package path</strong> [&lt;name&gt;]<br/><br/>Get the path to an installed WP-CLI package, or the package directory.<br/>If you want to contribute to a package, this is a great way to jump to it.<br><br>## OPTIONS<br><br>[&lt;name&gt;]<br>: Name of the package to get the directory for.<br><br>## EXAMPLES<br><br> cd $(wp package path)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>name[=null]</params>
  </command>
  <command>
    <name>package uninstall</name>
    <help><![CDATA[<strong>package uninstall</strong> &lt;name&gt;<br/><br/>Uninstall a WP-CLI package.<br/>## OPTIONS<br><br>&lt;name&gt;<br>: Name of the package to uninstall.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>plugin activate</name>
    <help><![CDATA[<strong>plugin activate</strong> [&lt;plugin&gt;...] [--all] [--network]<br/><br/>Activate a plugin.<br/>## OPTIONS<br><br>[&lt;plugin&gt;...]<br>: One or more plugins to activate.<br><br>[--all]<br>: If set, all plugins will be activated.<br><br>[--network]<br>: If set, the plugin will be activated for the entire multisite network.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin&gt;...[=null]</params>
  </command>
  <command>
    <name>plugin deactivate</name>
    <help><![CDATA[<strong>plugin deactivate</strong> [&lt;plugin&gt;...] [--uninstall] [--all] [--network]<br/><br/>Deactivate a plugin.<br/>## OPTIONS<br><br>[&lt;plugin&gt;...]<br>: One or more plugins to deactivate.<br><br>[--uninstall]<br>: Uninstall the plugin after deactivation.<br><br>[--all]<br>: If set, all plugins will be deactivated.<br><br>[--network]<br>: If set, the plugin will be deactivated for the entire multisite network.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin&gt;...[=null]</params>
  </command>
  <command>
    <name>plugin delete</name>
    <help><![CDATA[<strong>plugin delete</strong> &lt;plugin&gt;...<br/><br/>Delete plugin files without deactivating or uninstalling.<br/>## OPTIONS<br><br>&lt;plugin&gt;...<br>: One or more plugins to delete.<br><br>## EXAMPLES<br><br> wp plugin delete hello<br><br> # Delete inactive plugins<br> wp plugin delete $(wp plugin list --status=inactive --field=name)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin ...</params>
  </command>
  <command>
    <name>plugin get</name>
    <help><![CDATA[<strong>plugin get</strong> &lt;plugin&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a plugin.<br/>## OPTIONS<br><br>&lt;plugin&gt;<br>: The plugin to get.<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole plugin, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Output list as table, json, CSV, yaml. Defaults to table.<br><br>## EXAMPLES<br><br> wp plugin get bbpress --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin</params>
  </command>
  <command>
    <name>plugin install</name>
    <help><![CDATA[<strong>plugin install</strong> &lt;plugin|zip|url&gt;... [--version=&lt;version&gt;] [--force] [--activate] [--activate-network]<br/><br/>Install a plugin.<br/>## OPTIONS<br><br>&lt;plugin|zip|url&gt;...<br>: A plugin slug, the path to a local zip file, or URL to a remote zip file.<br><br>[--version=&lt;version&gt;]<br>: If set, get that particular version from wordpress.org, instead of the<br>stable version.<br><br>[--force]<br>: If set, the command will overwrite any installed version of the plugin, without prompting<br>for confirmation.<br><br>[--activate]<br>: If set, the plugin will be activated immediately after install.<br><br>[--activate-network]<br>: If set, the plugin will be network activated immediately after install<br><br>## EXAMPLES<br><br> # Install the latest version from wordpress.org and activate<br> wp plugin install bbpress --activate<br><br> # Install the development version from wordpress.org<br> wp plugin install bbpress --version=dev<br><br> # Install from a local zip file<br> wp plugin install ../my-plugin.zip<br><br> # Install from a remote zip file<br> wp plugin install http://s3.amazonaws.com/bucketname/my-plugin.zip?AWSAccessKeyId=123&Expires=456&Signature=abcdef<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin|zip|url&gt;...</params>
  </command>
  <command>
    <name>plugin is-installed</name>
    <help><![CDATA[<strong>plugin is-installed</strong> &lt;plugin&gt;<br/><br/>Check if the plugin is installed.<br/>Returns exit code 0 when installed, 1 when uninstalled.<br><br>## OPTIONS<br><br>&lt;plugin&gt;<br>: The plugin to check.<br><br>## EXAMPLES<br><br> wp plugin is-installed hello<br> echo $? # displays 0 or 1<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin</params>
  </command>
  <command>
    <name>plugin list</name>
    <help><![CDATA[<strong>plugin list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of plugins.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter results based on the value of a field.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each plugin.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each plugin:<br><br>* name<br>* status<br>* update<br>* version<br><br>These fields are optionally available:<br><br>* update_version<br>* update_package<br>* update_id<br>* title<br>* description<br><br>## EXAMPLES<br><br> wp plugin list --status=active --format=json<br><br> # List plugins on each site in a network<br> wp site list --field=url | xargs -n 1 -I % wp plugin list --url=%<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>plugin path</name>
    <help><![CDATA[<strong>plugin path</strong> [&lt;plugin&gt;] [--dir]<br/><br/>Get the path to a plugin or to the plugin directory.<br/>## OPTIONS<br><br>[&lt;plugin&gt;]<br>: The plugin to get the path to. If not set, will return the path to the<br>plugins directory.<br><br>[--dir]<br>: If set, get the path to the closest parent directory, instead of the<br>plugin file.<br><br>## EXAMPLES<br><br> cd $(wp plugin path)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin[=null]</params>
  </command>
  <command>
    <name>plugin search</name>
    <help><![CDATA[<strong>plugin search</strong> &lt;search&gt; [--page=&lt;page&gt;] [--per-page=&lt;per-page&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Search the wordpress.org plugin repository.<br/>## OPTIONS<br><br>&lt;search&gt;<br>: The string to search for.<br><br>[--page=&lt;page&gt;]<br>: Optional page to display. Defaults to 1.<br><br>[--per-page=&lt;per-page&gt;]<br>: Optional number of results to display. Defaults to 10.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each plugin.<br><br>[--fields=&lt;fields&gt;]<br>: Ask for specific fields from the API. Defaults to name,slug,author_profile,rating. Acceptable values:<br><br> **name**: Plugin Name<br> **slug**: Plugin Slug<br> **version**: Current Version Number<br> **author**: Plugin Author<br> **author_profile**: Plugin Author Profile<br> **contributors**: Plugin Contributors<br> **requires**: Plugin Minimum Requirements<br> **tested**: Plugin Tested Up To<br> **compatibility**: Plugin Compatible With<br> **rating**: Plugin Rating<br> **num_ratings**: Number of Plugin Ratings<br> **homepage**: Plugin Author's Homepage<br> **description**: Plugin's Description<br> **short_description**: Plugin's Short Description<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## EXAMPLES<br><br> wp plugin search dsgnwrks --per-page=20 --format=json<br><br> wp plugin search dsgnwrks --fields=name,version,slug,rating,num_ratings<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>search</params>
  </command>
  <command>
    <name>plugin status</name>
    <help><![CDATA[<strong>plugin status</strong> [&lt;plugin&gt;]<br/><br/>See the status of one or all plugins.<br/>## OPTIONS<br><br>[&lt;plugin&gt;]<br>: A particular plugin to show the status for.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin[=null]</params>
  </command>
  <command>
    <name>plugin toggle</name>
    <help><![CDATA[<strong>plugin toggle</strong> &lt;plugin&gt;... [--network]<br/><br/>Toggle a plugin's activation state.<br/>## OPTIONS<br><br>&lt;plugin&gt;...<br>: One or more plugins to toggle.<br><br>[--network]<br>: If set, the plugin will be toggled for the entire multisite network.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin&gt;...</params>
  </command>
  <command>
    <name>plugin uninstall</name>
    <help><![CDATA[<strong>plugin uninstall</strong> &lt;plugin&gt;... [--deactivate] [--skip-delete]<br/><br/>Uninstall a plugin.<br/>## OPTIONS<br><br>&lt;plugin&gt;...<br>: One or more plugins to uninstall.<br><br>[--deactivate]<br>: Deactivate the plugin before uninstalling. Default behavior is to warn and skip if the plugin is active.<br><br>[--skip-delete]<br>: If set, the plugin files will not be deleted. Only the uninstall procedure<br>will be run.<br><br>## EXAMPLES<br><br> wp plugin uninstall hello<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin&gt;...</params>
  </command>
  <command>
    <name>plugin update</name>
    <help><![CDATA[<strong>plugin update</strong> [&lt;plugin&gt;...] [--all] [--format=&lt;format&gt;] [--version=&lt;version&gt;] [--dry-run]<br/><br/>Update one or more plugins.<br/>## OPTIONS<br><br>[&lt;plugin&gt;...]<br>: One or more plugins to update.<br><br>[--all]<br>: If set, all plugins that have updates will be updated.<br><br>[--format=&lt;format&gt;]<br>: Output summary as table or summary. Defaults to table.<br><br>[--version=&lt;version&gt;]<br>: If set, the plugin will be updated to the specified version.<br><br>[--dry-run]<br>: Preview which plugins would be updated.<br><br>## EXAMPLES<br><br> wp plugin update bbpress --version=dev<br><br> wp plugin update --all<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;plugin&gt;...[=null]</params>
  </command>
  <command>
    <name>post create</name>
    <help><![CDATA[<strong>post create</strong> [&lt;file&gt;] [--&lt;field&gt;=&lt;value&gt;] [--edit] [--porcelain]<br/><br/>Create a post.<br/>## OPTIONS<br><br>[&lt;file&gt;]<br>: Read post content from &lt;file&gt;. If this value is present, the<br> `--post_content` argument will be ignored.<br><br> Passing `-` as the filename will cause post content to<br> be read from STDIN.<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Associative args for the new post. See wp_insert_post().<br><br>[--edit]<br>: Immediately open system's editor to write or edit post content.<br><br> If content is read from a file, from STDIN, or from the `--post_content`<br> argument, that text will be loaded into the editor.<br><br>[--porcelain]<br>: Output just the new post id.<br><br>## EXAMPLES<br><br> wp post create --post_type=page --post_title='A future post' --post_status=future --post_date='2020-12-01 07:00:00'<br><br> wp post create ./post-content.txt --post_category=201,345 --post_title='Post from file'<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>file[=null]</params>
  </command>
  <command>
    <name>post delete</name>
    <help><![CDATA[<strong>post delete</strong> &lt;id&gt;... [--force] [--defer-term-counting]<br/><br/>Delete a post by ID.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of posts to delete.<br><br>[--force]<br>: Skip the trash bin.<br><br>[--defer-term-counting]<br>: Recalculate term count in batch, for a performance boost.<br><br>## EXAMPLES<br><br> wp post delete 123 --force<br><br> wp post delete $(wp post list --post_type='page' --format=ids)<br><br> # delete all posts in the trash<br> wp post delete $(wp post list --post_status=trash --format=ids)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;id&gt;...</params>
  </command>
  <command>
    <name>post edit</name>
    <help><![CDATA[<strong>post edit</strong> &lt;id&gt;<br/><br/>Launch system editor to edit post content.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the post to edit.<br><br>## EXAMPLES<br><br> wp post edit 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>post generate</name>
    <help><![CDATA[<strong>post generate</strong> [--count=&lt;number&gt;] [--post_type=&lt;type&gt;] [--post_status=&lt;status&gt;] [--post_author=&lt;login&gt;] [--post_date=&lt;yyyy-mm-dd&gt;] [--post_content] [--max_depth=&lt;number&gt;]<br/><br/>Generate some posts.<br/>## OPTIONS<br><br>[--count=&lt;number&gt;]<br>: How many posts to generate. Default: 100<br><br>[--post_type=&lt;type&gt;]<br>: The type of the generated posts. Default: 'post'<br><br>[--post_status=&lt;status&gt;]<br>: The status of the generated posts. Default: 'publish'<br><br>[--post_author=&lt;login&gt;]<br>: The author of the generated posts. Default: none<br><br>[--post_date=&lt;yyyy-mm-dd&gt;]<br>: The date of the generated posts. Default: current date<br><br>[--post_content]<br>: If set, the command reads the post_content from STDIN.<br><br>[--max_depth=&lt;number&gt;]<br>: For hierarchical post types, generate child posts down to a certain depth. Default: 1<br><br>## EXAMPLES<br><br> wp post generate --count=10 --post_type=page --post_date=1999-01-04<br> curl http://loripsum.net/api/5 | wp post generate --post_content --count=10<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>post get</name>
    <help><![CDATA[<strong>post get</strong> &lt;id&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a post's content by ID.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the post to get.<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole post, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> # save the post content to a file<br> wp post get 12 --field=content &gt; file.txt<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>post list</name>
    <help><![CDATA[<strong>post list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of posts.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: One or more args to pass to WP_Query.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each post.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each post:<br><br>* ID<br>* post_title<br>* post_name<br>* post_date<br>* post_status<br><br>These fields are optionally available:<br><br>* post_author<br>* post_date_gmt<br>* post_content<br>* post_excerpt<br>* comment_status<br>* ping_status<br>* post_password<br>* to_ping<br>* pinged<br>* post_modified<br>* post_modified_gmt<br>* post_content_filtered<br>* post_parent<br>* guid<br>* menu_order<br>* post_type<br>* post_mime_type<br>* comment_count<br>* filter<br>* url<br><br>## EXAMPLES<br><br> wp post list --field=ID<br><br> wp post list --post_type=post --posts_per_page=5 --format=json<br><br> wp post list --post_type=page --fields=post_title,post_status<br><br> wp post list --post_type=page,post --format=ids<br><br> wp post list --post__in=1,3<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>post meta add</name>
    <help><![CDATA[<strong>post meta add</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Add a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to create.<br><br>[&lt;value&gt;]<br>: The value of the meta field. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>post meta delete</name>
    <help><![CDATA[<strong>post meta delete</strong> &lt;id&gt; [&lt;key&gt;] [&lt;value&gt;] [--all]<br/><br/>Delete a meta field.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>[&lt;key&gt;]<br>: The name of the meta field to delete.<br><br>[&lt;value&gt;]<br>: The value to delete. If omitted, all rows with key will deleted.<br><br>[--all]<br>: Delete all meta for the object.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key[=null] value[=null]</params>
  </command>
  <command>
    <name>post meta get</name>
    <help><![CDATA[<strong>post meta get</strong> &lt;id&gt; &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get meta field value.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to get.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key</params>
  </command>
  <command>
    <name>post meta list</name>
    <help><![CDATA[<strong>post meta list</strong> &lt;id&gt; [--keys=&lt;keys&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all metadata associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>[--keys=&lt;keys&gt;]<br>: Limit output to metadata of specific keys.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields. Defaults to id,meta_key,meta_value.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>post meta update</name>
    <help><![CDATA[<strong>post meta update</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Update a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to update.<br><br>[&lt;value&gt;]<br>: The new value. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>post term add</name>
    <help><![CDATA[<strong>post term add</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Add a term. Appends to existing set of terms on the object.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to be added.<br><br>&lt;term&gt;...<br>: The slug of the term or terms to be added.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>post term list</name>
    <help><![CDATA[<strong>post term list</strong> &lt;id&gt; &lt;taxonomy&gt;... [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all terms associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>&lt;taxonomy&gt;...<br>: One or more taxonomies to list.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each term:<br><br>* term_id<br>* name<br>* slug<br>* taxonomy<br><br>These fields are optionally available:<br><br>* term_taxonomy_id<br>* description<br>* term_group<br>* parent<br>* count<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id &lt;taxonomy&gt;...</params>
  </command>
  <command>
    <name>post term remove</name>
    <help><![CDATA[<strong>post term remove</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Remove a term.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to deleted.<br><br>&lt;term&gt;...<br>: The name of the term or terms to deleted.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>post term set</name>
    <help><![CDATA[<strong>post term set</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Set terms. Replaces existing terms on the object.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to be updated.<br><br>&lt;term&gt;...<br>: The slug of the term or terms to be updated.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>post update</name>
    <help><![CDATA[<strong>post update</strong> &lt;id&gt;... [&lt;file&gt;] --&lt;field&gt;=&lt;value&gt; [--defer-term-counting]<br/><br/>Update one or more posts.<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of posts to update.<br><br>[&lt;file&gt;]<br>: Read post content from &lt;file&gt;. If this value is present, the<br> `--post_content` argument will be ignored.<br><br> Passing `-` as the filename will cause post content to<br> be read from STDIN.<br><br>--&lt;field&gt;=&lt;value&gt;<br>: One or more fields to update. See wp_update_post().<br><br>[--defer-term-counting]<br>: Recalculate term count in batch, for a performance boost.<br><br>## EXAMPLES<br><br> wp post update 123 --post_name=something --post_status=draft<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;id&gt;... file[=null]</params>
  </command>
  <command>
    <name>post-type get</name>
    <help><![CDATA[<strong>post-type get</strong> &lt;post-type&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a post type<br/>## OPTIONS<br><br>&lt;post-type&gt;<br>: Post type slug<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole taxonomy, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp post-type get page --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>post-type</params>
  </command>
  <command>
    <name>post-type list</name>
    <help><![CDATA[<strong>post-type list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List post types.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter by one or more fields (see get_post_types() first parameter for a list of available fields).<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each post type.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific post type fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each term:<br><br>* name<br>* label<br>* description<br>* hierarchical<br>* public<br>* capability_type<br><br>There are no optionally available fields.<br><br>## EXAMPLES<br><br> wp post-type list --format=csv<br><br> wp post-type list --object-type=post --fields=name,public<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>rewrite flush</name>
    <help><![CDATA[<strong>rewrite flush</strong> [--hard]<br/><br/>Flush rewrite rules.<br/>## DESCRIPTION<br><br>Resets WordPress' rewrite rules based on registered post types, etc.<br><br>To regenerate a .htaccess file with WP-CLI, you'll need to add the mod_rewrite module<br>to your wp-cli.yml or config.yml. For example:<br><br>`apache_modules:<br> - mod_rewrite`<br><br>## OPTIONS<br><br>[--hard]<br>: Perform a hard flush - update `.htaccess` rules as well as rewrite rules in database. Works only on single site installs.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>rewrite list</name>
    <help><![CDATA[<strong>rewrite list</strong> [--match=&lt;url&gt;] [--source=&lt;source&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Print current rewrite rules.<br/>## OPTIONS<br><br>[--match=&lt;url&gt;]<br>: Show rewrite rules matching a particular URL.<br><br>[--source=&lt;source&gt;]<br>: Show rewrite rules from a particular source.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to match,query,source.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## EXAMPLES<br><br> wp rewrite list --format=csv<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>rewrite structure</name>
    <help><![CDATA[<strong>rewrite structure</strong> &lt;permastruct&gt; [--category-base=&lt;base&gt;] [--tag-base=&lt;base&gt;] [--hard]<br/><br/>Update the permalink structure.<br/>## DESCRIPTION<br><br>Updates the post permalink structure.<br><br>To regenerate a .htaccess file with WP-CLI, you'll need to add the mod_rewrite module<br>to your wp-cli.yml or config.yml. For example:<br><br>`apache_modules:<br> - mod_rewrite`<br><br>## OPTIONS<br><br>&lt;permastruct&gt;<br>: The new permalink structure to apply.<br><br>[--category-base=&lt;base&gt;]<br>: Set the base for category permalinks, i.e. '/category/'.<br><br>[--tag-base=&lt;base&gt;]<br>: Set the base for tag permalinks, i.e. '/tag/'.<br><br>[--hard]<br>: Perform a hard flush - update `.htaccess` rules as well as rewrite rules in database.<br><br>## EXAMPLES<br><br> wp rewrite structure '/%year%/%monthnum%/%postname%'<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>permastruct</params>
  </command>
  <command>
    <name>role create</name>
    <help><![CDATA[<strong>role create</strong> &lt;role-key&gt; &lt;role-name&gt; [--clone=&lt;role&gt;]<br/><br/>Create a new role.<br/>## OPTIONS<br><br>&lt;role-key&gt;<br>: The internal name of the role.<br><br>&lt;role-name&gt;<br>: The publicly visible name of the role.<br><br>[--clone=&lt;role&gt;]<br>: Clone capabilities from an existing role.<br><br>## EXAMPLES<br><br> wp role create approver Approver<br><br> wp role create productadmin "Product Administrator"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role-key role-name</params>
  </command>
  <command>
    <name>role delete</name>
    <help><![CDATA[<strong>role delete</strong> &lt;role-key&gt;<br/><br/>Delete an existing role.<br/>## OPTIONS<br><br>&lt;role-key&gt;<br>: The internal name of the role.<br><br>## EXAMPLES<br><br> wp role delete approver<br><br> wp role delete productadmin<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role-key</params>
  </command>
  <command>
    <name>role exists</name>
    <help><![CDATA[<strong>role exists</strong> &lt;role-key&gt;<br/><br/>Check if a role exists.<br/>##DESCRIPTION<br><br>Will exit with status 0 if the role exists, 1 if it does not.<br><br>## OPTIONS<br><br>&lt;role-key&gt;<br>: The internal name of the role.<br><br>## EXAMPLES<br><br> wp role exists editor<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>role-key</params>
  </command>
  <command>
    <name>role list</name>
    <help><![CDATA[<strong>role list</strong> [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all roles.<br/>## OPTIONS<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each role:<br><br>* name<br>* role<br><br>There are no optional fields.<br><br>## EXAMPLES<br><br> wp role list --fields=role --format=csv<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>role reset</name>
    <help><![CDATA[<strong>role reset</strong> [&lt;role-key&gt;...] [--all]<br/><br/>Reset any default role to default capabilities.<br/>## OPTIONS<br><br>[&lt;role-key&gt;...]<br>: The internal name of one or more roles to reset.<br><br>[--all]<br>: If set, all default roles will be reset.<br><br>## EXAMPLES<br><br> wp role reset administrator author contributor<br><br> wp role reset --all<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;role-key&gt;...[=null]</params>
  </command>
  <command>
    <name>scaffold _s</name>
    <help><![CDATA[<strong>scaffold _s</strong> &lt;slug&gt; [--activate] [--enable-network] [--theme_name=&lt;title&gt;] [--author=&lt;full-name&gt;] [--author_uri=&lt;uri&gt;] [--sassify] [--force]<br/><br/>Generate starter code for a theme.<br/>## OPTIONS<br><br>&lt;slug&gt;<br>: The slug for the new theme, used for prefixing functions.<br><br>[--activate]<br>: Activate the newly downloaded theme.<br><br>[--enable-network]<br>: Enable the newly downloaded theme for the entire network.<br><br>[--theme_name=&lt;title&gt;]<br>: What to put in the 'Theme Name:' header in style.css<br><br>[--author=&lt;full-name&gt;]<br>: What to put in the 'Author:' header in style.css<br><br>[--author_uri=&lt;uri&gt;]<br>: What to put in the 'Author URI:' header in style.css<br><br>[--sassify]<br>: Include stylesheets as SASS<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>slug</params>
  </command>
  <command>
    <name>scaffold child-theme</name>
    <help><![CDATA[<strong>scaffold child-theme</strong> &lt;slug&gt; --parent_theme=&lt;slug&gt; [--theme_name=&lt;title&gt;] [--author=&lt;full-name&gt;] [--author_uri=&lt;uri&gt;] [--theme_uri=&lt;uri&gt;] [--activate] [--enable-network] [--force]<br/><br/>Generate empty child theme.<br/>## OPTIONS<br><br>&lt;slug&gt;<br>: The slug for the new child theme.<br><br>--parent_theme=&lt;slug&gt;<br>: What to put in the 'Template:' header in style.css<br><br>[--theme_name=&lt;title&gt;]<br>: What to put in the 'Theme Name:' header in style.css<br><br>[--author=&lt;full-name&gt;]<br>: What to put in the 'Author:' header in style.css<br><br>[--author_uri=&lt;uri&gt;]<br>: What to put in the 'Author URI:' header in style.css<br><br>[--theme_uri=&lt;uri&gt;]<br>: What to put in the 'Theme URI:' header in style.css<br><br>[--activate]<br>: Activate the newly created child theme.<br><br>[--enable-network]<br>: Enable the newly created child theme for the entire network.<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>slug</params>
  </command>
  <command>
    <name>scaffold plugin</name>
    <help><![CDATA[<strong>scaffold plugin</strong> &lt;slug&gt; [--dir=&lt;dirname&gt;] [--plugin_name=&lt;title&gt;] [--plugin_description=&lt;description&gt;] [--plugin_author=&lt;author&gt;] [--plugin_author_uri=&lt;url&gt;] [--plugin_uri=&lt;url&gt;] [--skip-tests] [--activate] [--activate-network] [--force]<br/><br/>Generate starter code for a plugin.<br/>## OPTIONS<br><br>&lt;slug&gt;<br>: The internal name of the plugin.<br><br>[--dir=&lt;dirname&gt;]<br>: Put the new plugin in some arbitrary directory path. Plugin directory will be path plus supplied slug.<br><br>[--plugin_name=&lt;title&gt;]<br>: What to put in the 'Plugin Name:' header<br><br>[--plugin_description=&lt;description&gt;]<br>: What to put in the 'Description:' header.<br><br>[--plugin_author=&lt;author&gt;]<br>: What to put in the 'Author:' header.<br><br>[--plugin_author_uri=&lt;url&gt;]<br>: What to put in the 'Author URI:' header.<br><br>[--plugin_uri=&lt;url&gt;]<br>: What to put in the 'Plugin URI:' header.<br><br>[--skip-tests]<br>: Don't generate files for unit testing.<br><br>[--activate]<br>: Activate the newly generated plugin.<br><br>[--activate-network]<br>: Network activate the newly generated plugin.<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>slug</params>
  </command>
  <command>
    <name>scaffold plugin-tests</name>
    <help><![CDATA[<strong>scaffold plugin-tests</strong> [&lt;plugin&gt;] [--dir=&lt;dirname&gt;] [--force]<br/><br/>Generate files needed for running PHPUnit tests.<br/>## OVERVIEW<br><br>The following files are generated for your plugin by this command:<br><br>* `phpunit.xml.dist` is the configuration file for PHPUnit.<br>* `.travis.yml` is the configuration file for Travis CI.<br>* `bin/install-wp-tests.sh` configures the WordPress test suite and a test database.<br>* `tests/bootstrap.php` is the file that makes the current plugin active when running the test suite.<br>* `tests/test-sample.php` is a sample file containing the actual tests.<br><br>Learn more from the [plugin unit tests documentation](http://wp-cli.org/docs/plugin-unit-tests/).<br><br>## ENVIRONMENT<br><br>The `tests/bootstrap.php` file looks for the WP_TESTS_DIR environment<br>variable.<br><br>## OPTIONS<br><br>[&lt;plugin&gt;]<br>: The name of the plugin to generate test files for.<br><br>[--dir=&lt;dirname&gt;]<br>: Generate test files for a non-standard plugin path. If no plugin slug is specified, the directory name is used.<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## EXAMPLE<br><br> wp scaffold plugin-tests hello<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>plugin[=null]</params>
  </command>
  <command>
    <name>scaffold post-type</name>
    <help><![CDATA[<strong>scaffold post-type</strong> &lt;slug&gt; [--label=&lt;label&gt;] [--textdomain=&lt;textdomain&gt;] [--dashicon=&lt;dashicon&gt;] [--theme] [--plugin=&lt;plugin&gt;] [--raw] [--force]<br/><br/>Generate PHP code for registering a custom post type.<br/>## OPTIONS<br><br>&lt;slug&gt;<br>: The internal name of the post type.<br><br>[--label=&lt;label&gt;]<br>: The text used to translate the update messages<br><br>[--textdomain=&lt;textdomain&gt;]<br>: The textdomain to use for the labels.<br><br>[--dashicon=&lt;dashicon&gt;]<br>: The dashicon to use in the menu.<br><br>[--theme]<br>: Create a file in the active theme directory, instead of sending to<br>STDOUT. Specify a theme with `--theme=&lt;theme&gt;` to have the file placed in that theme.<br><br>[--plugin=&lt;plugin&gt;]<br>: Create a file in the given plugin's directory, instead of sending to STDOUT.<br><br>[--raw]<br>: Just generate the `register_post_type()` call and nothing else.<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>slug</params>
  </command>
  <command>
    <name>scaffold taxonomy</name>
    <help><![CDATA[<strong>scaffold taxonomy</strong> &lt;slug&gt; [--post_types=&lt;post-types&gt;] [--label=&lt;label&gt;] [--textdomain=&lt;textdomain&gt;] [--theme] [--plugin=&lt;plugin&gt;] [--raw] [--force]<br/><br/>Generate PHP code for registering a custom taxonomy.<br/>## OPTIONS<br><br>&lt;slug&gt;<br>: The internal name of the taxonomy.<br><br>[--post_types=&lt;post-types&gt;]<br>: Post types to register for use with the taxonomy.<br><br>[--label=&lt;label&gt;]<br>: The text used to translate the update messages.<br><br>[--textdomain=&lt;textdomain&gt;]<br>: The textdomain to use for the labels.<br><br>[--theme]<br>: Create a file in the active theme directory, instead of sending to<br>STDOUT. Specify a theme with `--theme=&lt;theme&gt;` to have the file placed in that theme.<br><br>[--plugin=&lt;plugin&gt;]<br>: Create a file in the given plugin's directory, instead of sending to STDOUT.<br><br>[--raw]<br>: Just generate the `register_taxonomy()` call and nothing else.<br><br>[--force]<br>: Overwrite files that already exist.<br><br>## EXAMPLES<br><br> wp scaffold taxonomy venue --post_types=event,presentation<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>slug</params>
  </command>
  <command>
    <name>search-replace</name>
    <help><![CDATA[<strong>search-replace</strong> &lt;old&gt; &lt;new&gt; [&lt;table&gt;...] [--dry-run] [--network] [--all-tables-with-prefix] [--all-tables] [--export[=&lt;file&gt;]] [--skip-columns=&lt;columns&gt;] [--precise] [--recurse-objects] [--verbose] [--regex]<br/><br/>Search/replace strings in the database.<br/>## DESCRIPTION<br><br>This command will searches through all rows in a selection of tables<br>and replaces appearances of the first string with the second string.<br><br>By default, the command uses tables registered to the $wpdb object. On<br>multisite, this will just be the tables for the current site unless<br>--network is specified.<br><br>Search/replace intelligently handles PHP serialized data, and does not<br>change primary key values.<br><br>## OPTIONS<br><br>&lt;old&gt;<br>: A string to search for within the database.<br><br>&lt;new&gt;<br>: Replace instances of the first string with this new string.<br><br>[&lt;table&gt;...]<br>: List of database tables to restrict the replacement to. Wildcards are<br>supported, e.g. `'wp_*_options'` or `'wp_post*'`.<br><br>[--dry-run]<br>: Run the entire search/replace operation and show report, but don't save<br>changes to the database.<br><br>[--network]<br>: Search/replace through all the tables registered to $wpdb in a<br>multisite install.<br><br>[--all-tables-with-prefix]<br>: Enable replacement on any tables that match the table prefix even if<br>not registered on $wpdb.<br><br>[--all-tables]<br>: Enable replacement on ALL tables in the database, regardless of the<br>prefix, and even if not registered on $wpdb. Overrides --network<br>and --all-tables-with-prefix.<br><br>[--export[=&lt;file&gt;]]<br>: Write transformed data as SQL file instead of saving replacements to<br>the database. If &lt;file&gt; is not supplied, will output to STDOUT.<br><br>[--skip-columns=&lt;columns&gt;]<br>: Do not perform the replacement on specific columns. Use commas to<br>specify multiple columns. 'guid' is skipped by default.<br><br>[--precise]<br>: Force the use of PHP (instead of SQL) which is more thorough,<br>but slower.<br><br>[--recurse-objects]<br>: Enable recursing into objects to replace strings. Defaults to true;<br>pass --no-recurse-objects to disable.<br><br>[--verbose]<br>: Prints rows to the console as they're updated.<br><br>[--regex]<br>: Runs the search using a regular expression. Warning: search-replace<br>will take about 15-20x longer when using --regex.<br><br>## EXAMPLES<br><br> wp search-replace 'http://example.dev' 'http://example.com' --skip-columns=guid<br><br> wp search-replace 'foo' 'bar' wp_posts wp_postmeta wp_terms --dry-run<br><br> # Turn your production database into a local database<br> wp search-replace --url=example.com example.com example.dev 'wp_*_options'<br><br> # Search/replace to a SQL file without transforming the database<br> wp search-replace foo bar --export=database.sql<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>old new &lt;table&gt;...[=null]</params>
  </command>
  <command>
    <name>server</name>
    <help><![CDATA[<strong>server</strong> [--host=&lt;host&gt;] [--port=&lt;port&gt;] [--docroot=&lt;path&gt;]<br/><br/>Launch PHP's built-in web server for this specific WordPress installation.<br/>&lt;http://php.net/manual/en/features.commandline.webserver.php&gt;<br><br>## OPTIONS<br><br>[--host=&lt;host&gt;]<br>: The hostname to bind the server to. Default: localhost<br><br>[--port=&lt;port&gt;]<br>: The port number to bind the server to. Default: 8080<br><br>[--docroot=&lt;path&gt;]<br>: The path to use as the document root.<br><br>## EXAMPLES<br><br> # Make the instance available on any address (with port 8080)<br> wp server --host=0.0.0.0<br><br> # Run on port 80 (for multisite)<br> sudo wp server --host=localhost.localdomain --port=80<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>shell</name>
    <help><![CDATA[<strong>shell</strong> [--basic]<br/><br/>Interactive PHP console.<br/>## DESCRIPTION<br><br>`wp shell` allows you to evaluate PHP statements and expressions interactively, from within a WordPress environment. This means that you have access to all the functions, classes and globals that you would have access to from inside a WordPress plugin, for example.<br><br>## OPTIONS<br><br>[--basic]<br>: Start in fail-safe mode, even if Boris is available.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>sidebar list</name>
    <help><![CDATA[<strong>sidebar list</strong> [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List registered sidebars.<br/>## OPTIONS<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each sidebar:<br><br>* name<br>* id<br>* description<br><br>These fields are optionally available:<br><br>* class<br>* before_widget<br>* after_widget<br>* before_title<br>* after_title<br><br>## EXAMPLES<br><br> wp sidebar list --fields=name,id --format=csv<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>site activate</name>
    <help><![CDATA[<strong>site activate</strong> &lt;id&gt;...<br/><br/>Activate one or more sites<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to activate.<br><br>## EXAMPLES<br><br> wp site activate 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>site archive</name>
    <help><![CDATA[<strong>site archive</strong> &lt;id&gt;...<br/><br/>Archive one or more sites<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to archive.<br><br>## EXAMPLES<br><br> wp site archive 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>site create</name>
    <help><![CDATA[<strong>site create</strong> --slug=&lt;slug&gt; [--title=&lt;title&gt;] [--email=&lt;email&gt;] [--network_id=&lt;network-id&gt;] [--private] [--porcelain]<br/><br/>Create a site in a multisite install.<br/>## OPTIONS<br><br>--slug=&lt;slug&gt;<br>: Path for the new site. Subdomain on subdomain installs, directory on subdirectory installs.<br><br>[--title=&lt;title&gt;]<br>: Title of the new site. Default: prettified slug.<br><br>[--email=&lt;email&gt;]<br>: Email for Admin user. User will be created if none exists. Assignement to Super Admin if not included.<br><br>[--network_id=&lt;network-id&gt;]<br>: Network to associate new site with. Defaults to current network (typically 1).<br><br>[--private]<br>: If set, the new site will be non-public (not indexed)<br><br>[--porcelain]<br>: If set, only the site id will be output on success.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>site deactivate</name>
    <help><![CDATA[<strong>site deactivate</strong> &lt;id&gt;...<br/><br/>Deactivate one or more sites<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to deactivate.<br><br>## EXAMPLES<br><br> wp site deactivate 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>site delete</name>
    <help><![CDATA[<strong>site delete</strong> [&lt;site-id&gt;] [--slug=&lt;slug&gt;] [--yes] [--keep-tables]<br/><br/>Delete a site in a multisite install.<br/>## OPTIONS<br><br>[&lt;site-id&gt;]<br>: The id of the site to delete. If not provided, you must set the --slug parameter.<br><br>[--slug=&lt;slug&gt;]<br>: Path of the blog to be deleted. Subdomain on subdomain installs, directory on subdirectory installs.<br><br>[--yes]<br>: Answer yes to the confirmation message.<br><br>[--keep-tables]<br>: Delete the blog from the list, but don't drop it's tables.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>site-id[=null]</params>
  </command>
  <command>
    <name>site empty</name>
    <help><![CDATA[<strong>site empty</strong> [--uploads] [--yes]<br/><br/>Empty a site of its content (posts, comments, and terms).<br/>## OPTIONS<br><br>[--uploads]<br>: Also delete *all* files in the site's in the uploads directory.<br><br>[--yes]<br>: Proceed to empty the site without a confirmation prompt.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>site list</name>
    <help><![CDATA[<strong>site list</strong> [--network=&lt;id&gt;] [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all sites in a multisite install.<br/>## OPTIONS<br><br>[--network=&lt;id&gt;]<br>: The network to which the sites belong.<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter by one or more fields.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each site.<br><br>[--fields=&lt;fields&gt;]<br>: Comma-separated list of fields to show.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each site:<br><br>* blog_id<br>* url<br>* last_updated<br>* registered<br><br>These fields are optionally available:<br><br>* site_id<br>* domain<br>* path<br>* public<br>* archived<br>* mature<br>* spam<br>* deleted<br>* lang_id<br><br>## EXAMPLES<br><br> # Output a simple list of site URLs<br> wp site list --field=url<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>site spam</name>
    <help><![CDATA[<strong>site spam</strong> &lt;id&gt;...<br/><br/>Mark one or more sites as spam<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to be marked as spam.<br><br>## EXAMPLES<br><br> wp site spam 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>site unarchive</name>
    <help><![CDATA[<strong>site unarchive</strong> &lt;id&gt;...<br/><br/>Unarchive one or more sites<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to unarchive.<br><br>## EXAMPLES<br><br> wp site unarchive 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>site unspam</name>
    <help><![CDATA[<strong>site unspam</strong> &lt;id&gt;...<br/><br/>Remove one or more sites from spam<br/>## OPTIONS<br><br>&lt;id&gt;...<br>: One or more IDs of sites to remove from spam.<br><br>## EXAMPLES<br><br> wp site unspam 123<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id ...</params>
  </command>
  <command>
    <name>super-admin add</name>
    <help><![CDATA[<strong>super-admin add</strong> &lt;user&gt;...<br/><br/>Grant super-admin privileges to one or more users.<br/>&lt;user&gt;...<br>: One or more user IDs, user emails, or user logins.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user ...</params>
  </command>
  <command>
    <name>super-admin list</name>
    <help><![CDATA[<strong>super-admin list</strong> <br/><br/>Show a list of users with super-admin capabilities.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>super-admin remove</name>
    <help><![CDATA[<strong>super-admin remove</strong> &lt;user&gt;...<br/><br/>Revoke super-admin privileges to one or more users.<br/>&lt;user&gt;...<br>: One or more user IDs, user emails, or user logins.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user ...</params>
  </command>
  <command>
    <name>taxonomy get</name>
    <help><![CDATA[<strong>taxonomy get</strong> &lt;taxonomy&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a taxonomy<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy slug<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole taxonomy, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp taxonomy get post_tag --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy</params>
  </command>
  <command>
    <name>taxonomy list</name>
    <help><![CDATA[<strong>taxonomy list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List taxonomies.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter by one or more fields (see get_taxonomies() first parameter for a list of available fields).<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each taxonomy.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific taxonomy fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each term:<br><br>* name<br>* label<br>* description<br>* public<br>* hierarchical<br><br>There are no optionally available fields.<br><br>## EXAMPLES<br><br> wp taxonomy list --format=csv<br><br> wp taxonomy list --object-type=post --fields=name,public<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>term create</name>
    <help><![CDATA[<strong>term create</strong> &lt;taxonomy&gt; &lt;term&gt; [--slug=&lt;slug&gt;] [--description=&lt;description&gt;] [--parent=&lt;term-id&gt;] [--porcelain]<br/><br/>Create a term.<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy for the new term.<br><br>&lt;term&gt;<br>: A name for the new term.<br><br>[--slug=&lt;slug&gt;]<br>: A unique slug for the new term. Defaults to sanitized version of name.<br><br>[--description=&lt;description&gt;]<br>: A description for the new term.<br><br>[--parent=&lt;term-id&gt;]<br>: A parent for the new term.<br><br>[--porcelain]<br>: Output just the new term id.<br><br>## EXAMPLES<br><br> wp term create category Apple --description="A type of fruit"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy term</params>
  </command>
  <command>
    <name>term delete</name>
    <help><![CDATA[<strong>term delete</strong> &lt;taxonomy&gt; &lt;term-id&gt;...<br/><br/>Delete a term.<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy of the term to delete.<br><br>&lt;term-id&gt;...<br>: One or more IDs of terms to delete.<br><br>## EXAMPLES<br><br> # delete all post tags<br> wp term list post_tag --field=term_id | xargs wp term delete post_tag<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy term-id ...</params>
  </command>
  <command>
    <name>term generate</name>
    <help><![CDATA[<strong>term generate</strong> &lt;taxonomy&gt; [--count=&lt;number&gt;] [--max_depth=&lt;number&gt;]<br/><br/>Generate some terms.<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: The taxonomy for the generated terms.<br><br>[--count=&lt;number&gt;]<br>: How many terms to generate. Default: 100<br><br>[--max_depth=&lt;number&gt;]<br>: Generate child terms down to a certain depth. Default: 1<br><br>## EXAMPLES<br><br> wp term generate --count=10<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy</params>
  </command>
  <command>
    <name>term get</name>
    <help><![CDATA[<strong>term get</strong> &lt;taxonomy&gt; &lt;term-id&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a taxonomy term<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy of the term to get<br><br>&lt;term-id&gt;<br>: ID of the term to get<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole term, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp term get category 1 --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy term-id</params>
  </command>
  <command>
    <name>term list</name>
    <help><![CDATA[<strong>term list</strong> &lt;taxonomy&gt;... [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List terms in a taxonomy.<br/>## OPTIONS<br><br>&lt;taxonomy&gt;...<br>: List terms of one or more taxonomies<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter by one or more fields (see get_terms() $args parameter for a list of fields).<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each term.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each term:<br><br>* term_id<br>* term_taxonomy_id<br>* name<br>* slug<br>* description<br>* parent<br>* count<br><br>There are no optionally available fields.<br><br>## EXAMPLES<br><br> wp term list category --format=csv<br><br> wp term list post_tag --fields=name,slug<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;taxonomy&gt;...</params>
  </command>
  <command>
    <name>term meta add</name>
    <help><![CDATA[<strong>term meta add</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Add a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to create.<br><br>[&lt;value&gt;]<br>: The value of the meta field. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>term meta delete</name>
    <help><![CDATA[<strong>term meta delete</strong> &lt;id&gt; [&lt;key&gt;] [&lt;value&gt;] [--all]<br/><br/>Delete a meta field.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>[&lt;key&gt;]<br>: The name of the meta field to delete.<br><br>[&lt;value&gt;]<br>: The value to delete. If omitted, all rows with key will deleted.<br><br>[--all]<br>: Delete all meta for the object.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key[=null] value[=null]</params>
  </command>
  <command>
    <name>term meta get</name>
    <help><![CDATA[<strong>term meta get</strong> &lt;id&gt; &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get meta field value.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to get.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key</params>
  </command>
  <command>
    <name>term meta list</name>
    <help><![CDATA[<strong>term meta list</strong> &lt;id&gt; [--keys=&lt;keys&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all metadata associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>[--keys=&lt;keys&gt;]<br>: Limit output to metadata of specific keys.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields. Defaults to id,meta_key,meta_value.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>term meta update</name>
    <help><![CDATA[<strong>term meta update</strong> &lt;id&gt; &lt;key&gt; [&lt;value&gt;] [--format=&lt;format&gt;]<br/><br/>Update a meta field.<br/>## OPTIONS<br><br>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;key&gt;<br>: The name of the meta field to update.<br><br>[&lt;value&gt;]<br>: The new value. If ommited, the value is read from STDIN.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id key value[=null]</params>
  </command>
  <command>
    <name>term update</name>
    <help><![CDATA[<strong>term update</strong> &lt;taxonomy&gt; &lt;term-id&gt; [--name=&lt;name&gt;] [--slug=&lt;slug&gt;] [--description=&lt;description&gt;] [--parent=&lt;term-id&gt;]<br/><br/>Update a term.<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy of the term to update.<br><br>&lt;term-id&gt;<br>: ID for the term to update.<br><br>[--name=&lt;name&gt;]<br>: A new name for the term.<br><br>[--slug=&lt;slug&gt;]<br>: A new slug for the term.<br><br>[--description=&lt;description&gt;]<br>: A new description for the term.<br><br>[--parent=&lt;term-id&gt;]<br>: A new parent for the term.<br><br>## EXAMPLES<br><br> wp term update category 15 --name=Apple<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy term-id</params>
  </command>
  <command>
    <name>term url</name>
    <help><![CDATA[<strong>term url</strong> &lt;taxonomy&gt; &lt;term-id&gt;...<br/><br/>Get term url<br/>## OPTIONS<br><br>&lt;taxonomy&gt;<br>: Taxonomy of the term(s) to get.<br><br>&lt;term-id&gt;...<br>: One or more IDs of terms to get the URL.<br><br>## EXAMPLES<br><br> wp term url post_tag 123<br><br> wp term url post_tag 123 324<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>taxonomy term-id ...</params>
  </command>
  <command>
    <name>theme activate</name>
    <help><![CDATA[<strong>theme activate</strong> &lt;theme&gt;<br/><br/>Activate a theme.<br/>## OPTIONS<br><br>&lt;theme&gt;<br>: The theme to activate.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme</params>
  </command>
  <command>
    <name>theme delete</name>
    <help><![CDATA[<strong>theme delete</strong> &lt;theme&gt;...<br/><br/>Delete a theme.<br/>## OPTIONS<br><br>&lt;theme&gt;...<br>: One or more themes to delete.<br><br>## EXAMPLES<br><br> wp theme delete twentyeleven<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme ...</params>
  </command>
  <command>
    <name>theme disable</name>
    <help><![CDATA[<strong>theme disable</strong> &lt;theme&gt; [--network]<br/><br/>Disable a theme in a multisite install.<br/>## OPTIONS<br><br>&lt;theme&gt;<br>: The theme to disable.<br><br>[--network]<br>: If set, the theme is disabled on the network level. Note that<br>individual sites may still have this theme enabled if it was<br>enabled for them independently.<br><br>## EXAMPLES<br><br> wp theme disable twentythirteen<br><br> wp theme disable twentythirteen --network<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme</params>
  </command>
  <command>
    <name>theme enable</name>
    <help><![CDATA[<strong>theme enable</strong> &lt;theme&gt; [--network] [--activate]<br/><br/>Enable a theme in a multisite install.<br/>## OPTIONS<br><br>&lt;theme&gt;<br>: The theme to enable.<br><br>[--network]<br>: If set, the theme is enabled for the entire network<br><br>[--activate]<br>: If set, the theme is activated for the current site. Note that<br>the "network" flag has no influence on this.<br><br>## EXAMPLES<br><br> wp theme enable twentythirteen<br><br> wp theme enable twentythirteen --network<br><br> wp theme enable twentythirteen --activate<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme</params>
  </command>
  <command>
    <name>theme get</name>
    <help><![CDATA[<strong>theme get</strong> &lt;theme&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a theme<br/>## OPTIONS<br><br>&lt;theme&gt;<br>: The theme to get.<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole theme, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific fields. Defaults to all fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp theme get twentytwelve --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme</params>
  </command>
  <command>
    <name>theme install</name>
    <help><![CDATA[<strong>theme install</strong> &lt;theme|zip|url&gt;... [--version=&lt;version&gt;] [--force] [--activate]<br/><br/>Install a theme.<br/>## OPTIONS<br><br>&lt;theme|zip|url&gt;...<br>: A theme slug, the path to a local zip file, or URL to a remote zip file.<br><br>[--version=&lt;version&gt;]<br>: If set, get that particular version from wordpress.org, instead of the<br>stable version.<br><br>[--force]<br>: If set, the command will overwrite any installed version of the theme, without prompting<br>for confirmation.<br><br>[--activate]<br>: If set, the theme will be activated immediately after install.<br><br>## EXAMPLES<br><br> # Install the latest version from wordpress.org and activate<br> wp theme install twentytwelve --activate<br><br> # Install from a local zip file<br> wp theme install ../my-theme.zip<br><br> # Install from a remote zip file<br> wp theme install http://s3.amazonaws.com/bucketname/my-theme.zip?AWSAccessKeyId=123&Expires=456&Signature=abcdef<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;theme|zip|url&gt;...</params>
  </command>
  <command>
    <name>theme is-installed</name>
    <help><![CDATA[<strong>theme is-installed</strong> &lt;theme&gt;<br/><br/>Check if the theme is installed.<br/>Returns exit code 0 when installed, 1 when uninstalled.<br><br>## OPTIONS<br><br>&lt;theme&gt;<br>: The theme to check.<br><br>## EXAMPLES<br><br> wp theme is-installed twentytwelve<br> echo $? # displays 0 or 1<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme</params>
  </command>
  <command>
    <name>theme list</name>
    <help><![CDATA[<strong>theme list</strong> [--&lt;field&gt;=&lt;value&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a list of themes.<br/>## OPTIONS<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Filter results based on the value of a field.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each theme.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each theme:<br><br>* name<br>* status<br>* update<br>* version<br><br>These fields are optionally available:<br><br>* update_version<br>* update_package<br>* update_id<br>* title<br>* description<br><br>## EXAMPLES<br><br> wp theme list --status=inactive --format=csv<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>theme mod get</name>
    <help><![CDATA[<strong>theme mod get</strong> [&lt;mod&gt;...] [--all] [--format=&lt;format&gt;]<br/><br/>Get theme mod(s).<br/>## OPTIONS<br><br>[&lt;mod&gt;...]<br>: One or more mods to get.<br><br>[--all]<br>: List all theme mods<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json. Default: table<br><br>## EXAMPLES<br><br> wp theme mod get --all<br> wp theme mod get background_color --format=json<br> wp theme mod get background_color header_textcolor<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;mod&gt;...[=null]</params>
  </command>
  <command>
    <name>theme mod remove</name>
    <help><![CDATA[<strong>theme mod remove</strong> [&lt;mod&gt;...] [--all]<br/><br/>Remove theme mod(s).<br/>## OPTIONS<br><br>[&lt;mod&gt;...]<br>: One or more mods to remove.<br><br>[--all]<br>: Remove all theme mods<br><br>## EXAMPLES<br><br> wp theme mod remove --all<br> wp theme mod remove background_color<br> wp theme mod remove background_color header_textcolor<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;mod&gt;...[=null]</params>
  </command>
  <command>
    <name>theme mod set</name>
    <help><![CDATA[<strong>theme mod set</strong> &lt;mod&gt; &lt;value&gt;<br/><br/>Set a theme mod.<br/>## OPTIONS<br><br>&lt;mod&gt;<br>: The name of the theme mod to set or update.<br><br>&lt;value&gt;<br>: The new value.<br><br>## EXAMPLES<br><br> wp theme mod set background_color 000000<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>mod value</params>
  </command>
  <command>
    <name>theme path</name>
    <help><![CDATA[<strong>theme path</strong> [&lt;theme&gt;] [--dir]<br/><br/>Get the path to a theme or to the theme directory.<br/>## OPTIONS<br><br>[&lt;theme&gt;]<br>: The theme to get the path to. Path includes "style.css" file.<br>If not set, will return the path to the themes directory.<br><br>[--dir]<br>: If set, get the path to the closest parent directory, instead of the<br>theme's "style.css" file.<br><br>## EXAMPLES<br><br> cd $(wp theme path)<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme[=null]</params>
  </command>
  <command>
    <name>theme search</name>
    <help><![CDATA[<strong>theme search</strong> &lt;search&gt; [--per-page=&lt;per-page&gt;] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Search the wordpress.org theme repository.<br/>## OPTIONS<br><br>&lt;search&gt;<br>: The string to search for.<br><br>[--per-page=&lt;per-page&gt;]<br>: Optional number of results to display. Defaults to 10.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each theme.<br><br>[--fields=&lt;fields&gt;]<br>: Ask for specific fields from the API. Defaults to name,slug,author,rating. Acceptable values:<br><br> **name**: Theme Name<br> **slug**: Theme Slug<br> **version**: Current Version Number<br> **author**: Theme Author<br> **preview_url**: Theme Preview URL<br> **screenshot_url**: Theme Screenshot URL<br> **rating**: Theme Rating<br> **num_ratings**: Number of Theme Ratings<br> **homepage**: Theme Author's Homepage<br> **description**: Theme Description<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## EXAMPLES<br><br> wp theme search automattic --per-page=20<br><br> wp theme search automattic --fields=name,version,slug,rating,num_ratings,description<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>search</params>
  </command>
  <command>
    <name>theme status</name>
    <help><![CDATA[<strong>theme status</strong> [&lt;theme&gt;]<br/><br/>See the status of one or all themes.<br/>## OPTIONS<br><br>[&lt;theme&gt;]<br>: A particular theme to show the status for.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>theme[=null]</params>
  </command>
  <command>
    <name>theme update</name>
    <help><![CDATA[<strong>theme update</strong> [&lt;theme&gt;...] [--all] [--format=&lt;format&gt;] [--version=&lt;version&gt;] [--dry-run]<br/><br/>Update one or more themes.<br/>## OPTIONS<br><br>[&lt;theme&gt;...]<br>: One or more themes to update.<br><br>[--all]<br>: If set, all themes that have updates will be updated.<br><br>[--format=&lt;format&gt;]<br>: Output summary as table or summary. Defaults to table.<br><br>[--version=&lt;version&gt;]<br>: If set, the theme will be updated to the specified version.<br><br>[--dry-run]<br>: Preview which themes would be updated.<br><br>## EXAMPLES<br><br> wp theme update twentyeleven twentytwelve<br><br> wp theme update --all<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;theme&gt;...[=null]</params>
  </command>
  <command>
    <name>transient delete</name>
    <help><![CDATA[<strong>transient delete</strong> &lt;key&gt; [--network]<br/><br/>Delete a transient value.<br/>&lt;key&gt;<br>: Key for the transient.<br><br>[--network]<br>: Delete the value of a network transient, instead of that on a single site.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key</params>
  </command>
  <command>
    <name>transient delete-all</name>
    <help><![CDATA[<strong>transient delete-all</strong> <br/><br/>Delete all transients.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>transient delete-expired</name>
    <help><![CDATA[<strong>transient delete-expired</strong> <br/><br/>Delete all expired transients.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>transient get</name>
    <help><![CDATA[<strong>transient get</strong> &lt;key&gt; [--json] [--network]<br/><br/>Get a transient value.<br/>&lt;key&gt;<br>: Key for the transient.<br><br>[--json]<br>: Format output as JSON.<br><br>[--network]<br>: Get the value of the network transient, instead of the single site.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key</params>
  </command>
  <command>
    <name>transient set</name>
    <help><![CDATA[<strong>transient set</strong> &lt;key&gt; &lt;value&gt; [&lt;expiration&gt;] [--network]<br/><br/>Set a transient value. &lt;expiration&gt; is the time until expiration, in seconds.<br/>&lt;key&gt;<br>: Key for the transient.<br><br>&lt;value&gt;<br>: Value to be set for the transient.<br><br>[&lt;expiration&gt;]<br>: Time until expiration, in seconds.<br><br>[--network]<br>: Set the transient value on the network, instead of single site.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>key value expiration[=null]</params>
  </command>
  <command>
    <name>transient type</name>
    <help><![CDATA[<strong>transient type</strong> <br/><br/>See whether the transients API is using an object cache or the options table.<br/><br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>user add-cap</name>
    <help><![CDATA[<strong>user add-cap</strong> &lt;user&gt; &lt;cap&gt;<br/><br/>Add a capability for a user.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>&lt;cap&gt;<br>: The capability to add.<br><br>## EXAMPLES<br><br> wp user add-cap john create_premium_item<br> wp user add-cap 15 edit_product<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user cap</params>
  </command>
  <command>
    <name>user add-role</name>
    <help><![CDATA[<strong>user add-role</strong> &lt;user&gt; &lt;role&gt;<br/><br/>Add a role for a user.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>&lt;role&gt;<br>: Add the specified role to the user.<br><br>## EXAMPLES<br><br> wp user add-role bob author<br> wp user add-role 12 author<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user role</params>
  </command>
  <command>
    <name>user create</name>
    <help><![CDATA[<strong>user create</strong> &lt;user-login&gt; &lt;user-email&gt; [--role=&lt;role&gt;] [--user_pass=&lt;password&gt;] [--user_registered=&lt;yyyy-mm-dd&gt;] [--display_name=&lt;name&gt;] [--first_name=&lt;first_name&gt;] [--last_name=&lt;last_name&gt;] [--send-email] [--porcelain]<br/><br/>Create a user.<br/>## OPTIONS<br><br>&lt;user-login&gt;<br>: The login of the user to create.<br><br>&lt;user-email&gt;<br>: The email address of the user to create.<br><br>[--role=&lt;role&gt;]<br>: The role of the user to create. Default: default role<br><br>[--user_pass=&lt;password&gt;]<br>: The user password. Default: randomly generated<br><br>[--user_registered=&lt;yyyy-mm-dd&gt;]<br>: The date the user registered. Default: current date<br><br>[--display_name=&lt;name&gt;]<br>: The display name.<br><br>[--first_name=&lt;first_name&gt;]<br>: The user's first name.<br><br>[--last_name=&lt;last_name&gt;]<br>: The user's last name.<br><br>[--send-email]<br>: Send an email to the user with their new account details.<br><br>[--porcelain]<br>: Output just the new user id.<br><br>## EXAMPLES<br><br> wp user create bob bob@example.com --role=author<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user-login user-email</params>
  </command>
  <command>
    <name>user delete</name>
    <help><![CDATA[<strong>user delete</strong> &lt;user&gt;... [--network] [--reassign=&lt;user-id&gt;] [--yes]<br/><br/>Delete one or more users from the current site.<br/>## OPTIONS<br><br>&lt;user&gt;...<br>: The user login, user email, or user ID of the user(s) to delete.<br><br>[--network]<br>: On multisite, delete the user from the entire network.<br><br>[--reassign=&lt;user-id&gt;]<br>: User ID to reassign the posts to.<br><br>[--yes]<br>: Answer yes to any confirmation prompts.<br><br>## EXAMPLES<br><br> # Delete user 123 and reassign posts to user 567<br> wp user delete 123 --reassign=567<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;user&gt;...</params>
  </command>
  <command>
    <name>user generate</name>
    <help><![CDATA[<strong>user generate</strong> [--count=&lt;number&gt;] [--role=&lt;role&gt;]<br/><br/>Generate users.<br/>## OPTIONS<br><br>[--count=&lt;number&gt;]<br>: How many users to generate. Default: 100<br><br>[--role=&lt;role&gt;]<br>: The role of the generated users. Default: default role from WP<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>user get</name>
    <help><![CDATA[<strong>user get</strong> &lt;user&gt; [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>Get a single user.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>[--field=&lt;field&gt;]<br>: Instead of returning the whole user, returns the value of a single field.<br><br>[--fields=&lt;fields&gt;]<br>: Get a specific subset of the user's fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, csv, yaml. Default: table<br><br>## EXAMPLES<br><br> wp user get 12 --field=login<br><br> wp user get bob --format=json &gt; bob.json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user</params>
  </command>
  <command>
    <name>user import-csv</name>
    <help><![CDATA[<strong>user import-csv</strong> &lt;file&gt; [--send-email] [--skip-update]<br/><br/>Import users from a CSV file.<br/>## OPTIONS<br><br>&lt;file&gt;<br>: The local or remote CSV file of users to import.<br><br>[--send-email]<br>: Send an email to new users with their account details.<br><br>[--skip-update]<br>: Don't update users that already exist.<br><br>## EXAMPLES<br><br> wp user import-csv /path/to/users.csv<br> wp user import-csv http://example.com/users.csv<br><br> Sample users.csv file:<br><br> user_login,user_email,display_name,role<br> bobjones,bobjones@example.com,Bob Jones,contributor<br> newuser1,newuser1@example.com,New User,author<br> existinguser,existinguser@example.com,Existing User,administrator<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>file</params>
  </command>
  <command>
    <name>user list</name>
    <help><![CDATA[<strong>user list</strong> [--role=&lt;role&gt;] [--&lt;field&gt;=&lt;value&gt;] [--network] [--field=&lt;field&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List users.<br/>## OPTIONS<br><br>[--role=&lt;role&gt;]<br>: Only display users with a certain role.<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Control output by one or more arguments of get_users().<br><br>[--network]<br>: List all users in the network for multisite.<br><br>[--field=&lt;field&gt;]<br>: Prints the value of a single field for each user.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each user:<br><br>* ID<br>* user_login<br>* display_name<br>* user_email<br>* user_registered<br>* roles<br><br>These fields are optionally available:<br><br>* user_pass<br>* user_nicename<br>* user_url<br>* user_activation_key<br>* user_status<br>* spam<br>* deleted<br>* caps<br>* cap_key<br>* allcaps<br>* filter<br><br>## EXAMPLES<br><br> wp user list --field=ID<br><br> wp user list --role=administrator --format=csv<br><br> wp user list --fields=display_name,user_email --format=json<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
  </command>
  <command>
    <name>user list-caps</name>
    <help><![CDATA[<strong>user list-caps</strong> &lt;user&gt;<br/><br/>List all user's capabilities.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or login.<br><br>## EXAMPLES<br><br> wp user list-caps admin<br> wp user list-caps 21<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user</params>
  </command>
  <command>
    <name>user meta add</name>
    <help><![CDATA[<strong>user meta add</strong> &lt;user&gt; &lt;key&gt; &lt;value&gt; [--format=&lt;format&gt;]<br/><br/>Add a meta field.<br/>&lt;user&gt;<br>: The user login, user email, or user ID of the user to add metadata for.<br><br>&lt;key&gt;<br>: The metadata key.<br><br>&lt;value&gt;<br>: The new metadata value.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user key value</params>
  </command>
  <command>
    <name>user meta delete</name>
    <help><![CDATA[<strong>user meta delete</strong> &lt;user&gt; &lt;key&gt; [&lt;value&gt;]<br/><br/>Delete a meta field.<br/>&lt;user&gt;<br>: The user login, user email, or user ID of the user to delete metadata from.<br><br>&lt;key&gt;<br>: The metadata key.<br><br>[&lt;value&gt;]<br>: The value to delete. If omitted, all rows with key will deleted.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user key value[=null]</params>
  </command>
  <command>
    <name>user meta get</name>
    <help><![CDATA[<strong>user meta get</strong> &lt;user&gt; &lt;key&gt; [--format=&lt;format&gt;]<br/><br/>Get meta field value.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: The user login, user email, or user ID of the user to get metadata for.<br><br>&lt;key&gt;<br>: The metadata key.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, json, yaml. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user key</params>
  </command>
  <command>
    <name>user meta list</name>
    <help><![CDATA[<strong>user meta list</strong> &lt;id&gt; [--keys=&lt;keys&gt;] [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all metadata associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>[--keys=&lt;keys&gt;]<br>: Limit output to metadata of specific keys.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields. Defaults to id,meta_key,meta_value.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count. Default: table<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id</params>
  </command>
  <command>
    <name>user meta update</name>
    <help><![CDATA[<strong>user meta update</strong> &lt;user&gt; &lt;key&gt; &lt;value&gt; [--format=&lt;format&gt;]<br/><br/>Update a meta field.<br/>&lt;user&gt;<br>: The user login, user email, or user ID of the user to update metadata for.<br><br>&lt;key&gt;<br>: The metadata key.<br><br>&lt;value&gt;<br>: The new metadata value.<br><br>[--format=&lt;format&gt;]<br>: The serialization format for the value. Default is plaintext.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user key value</params>
  </command>
  <command>
    <name>user remove-cap</name>
    <help><![CDATA[<strong>user remove-cap</strong> &lt;user&gt; &lt;cap&gt;<br/><br/>Remove a user's capability.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>&lt;cap&gt;<br>: The capability to be removed.<br><br>## EXAMPLES<br><br> wp user remove-cap bob edit_themes<br> wp user remove-cap 11 publish_newsletters<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user cap</params>
  </command>
  <command>
    <name>user remove-role</name>
    <help><![CDATA[<strong>user remove-role</strong> &lt;user&gt; [&lt;role&gt;]<br/><br/>Remove a user's role.<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>[&lt;role&gt;]<br>: A specific role to remove.<br><br>## EXAMPLES<br><br> wp user remove-role bob<br> wp user remove-role 12 editor<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user role[=null]</params>
  </command>
  <command>
    <name>user set-role</name>
    <help><![CDATA[<strong>user set-role</strong> &lt;user&gt; [&lt;role&gt;]<br/><br/>Set the user role (for a particular blog).<br/>## OPTIONS<br><br>&lt;user&gt;<br>: User ID, user email, or user login.<br><br>[&lt;role&gt;]<br>: Make the user have the specified role. If not passed, the default role is<br>used.<br><br>## EXAMPLES<br><br> wp user set-role bob author<br> wp user set-role 12 author<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>user role[=null]</params>
  </command>
  <command>
    <name>user term add</name>
    <help><![CDATA[<strong>user term add</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Add a term. Appends to existing set of terms on the object.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to be added.<br><br>&lt;term&gt;...<br>: The slug of the term or terms to be added.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>user term list</name>
    <help><![CDATA[<strong>user term list</strong> &lt;id&gt; &lt;taxonomy&gt;... [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List all terms associated with an object.<br/>&lt;id&gt;<br>: ID for the object.<br><br>&lt;taxonomy&gt;...<br>: One or more taxonomies to list.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific row fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each term:<br><br>* term_id<br>* name<br>* slug<br>* taxonomy<br><br>These fields are optionally available:<br><br>* term_taxonomy_id<br>* description<br>* term_group<br>* parent<br>* count<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id &lt;taxonomy&gt;...</params>
  </command>
  <command>
    <name>user term remove</name>
    <help><![CDATA[<strong>user term remove</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Remove a term.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to deleted.<br><br>&lt;term&gt;...<br>: The name of the term or terms to deleted.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>user term set</name>
    <help><![CDATA[<strong>user term set</strong> &lt;id&gt; &lt;taxonomy&gt; &lt;term&gt;...<br/><br/>Set terms. Replaces existing terms on the object.<br/>&lt;id&gt;<br>: The ID of the object.<br><br>&lt;taxonomy&gt;<br>: The name of the taxonomy type to be updated.<br><br>&lt;term&gt;...<br>: The slug of the term or terms to be updated.<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>id taxonomy term ...</params>
  </command>
  <command>
    <name>user update</name>
    <help><![CDATA[<strong>user update</strong> &lt;user&gt;... --&lt;field&gt;=&lt;value&gt;<br/><br/>Update a user.<br/>## OPTIONS<br><br>&lt;user&gt;...<br>: The user login, user email or user ID of the user(s) to update.<br><br>--&lt;field&gt;=&lt;value&gt;<br>: One or more fields to update. For accepted fields, see wp_update_user().<br><br>## EXAMPLES<br><br> wp user update 123 --display_name=Mary --user_pass=marypass<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>&lt;user&gt;...</params>
  </command>
  <command>
    <name>widget add</name>
    <help><![CDATA[<strong>widget add</strong> &lt;name&gt; &lt;sidebar-id&gt; [&lt;position&gt;] [--&lt;field&gt;=&lt;value&gt;]<br/><br/>Add a widget to a sidebar.<br/>&lt;name&gt;<br>: Widget name.<br><br>&lt;sidebar-id&gt;<br>: ID for the corresponding sidebar.<br><br>[&lt;position&gt;]<br>: Widget's current position within the sidebar. Defaults to last<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Widget option to add, with its new value<br><br>## EXAMPLES<br><br> wp widget add calendar sidebar-1 2 --title="Calendar"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>name sidebar-id position[=null]</params>
  </command>
  <command>
    <name>widget deactivate</name>
    <help><![CDATA[<strong>widget deactivate</strong> &lt;widget-id&gt;...<br/><br/>Deactivate one or more widgets from an active sidebar.<br/>&lt;widget-id&gt;...<br>: Unique ID for the widget(s)<br><br>## EXAMPLES<br><br> wp widget deactivate recent-comments-2<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>widget-id ...</params>
  </command>
  <command>
    <name>widget delete</name>
    <help><![CDATA[<strong>widget delete</strong> &lt;widget-id&gt;...<br/><br/>Delete one or more widgets from a sidebar.<br/>&lt;widget-id&gt;...<br>: Unique ID for the widget(s)<br><br>## EXAMPLES<br><br> wp widget delete recent-comments-2<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>widget-id ...</params>
  </command>
  <command>
    <name>widget list</name>
    <help><![CDATA[<strong>widget list</strong> &lt;sidebar-id&gt; [--fields=&lt;fields&gt;] [--format=&lt;format&gt;]<br/><br/>List widgets associated with a sidebar.<br/>&lt;sidebar-id&gt;<br>: ID for the corresponding sidebar.<br><br>[--fields=&lt;fields&gt;]<br>: Limit the output to specific object fields.<br><br>[--format=&lt;format&gt;]<br>: Accepted values: table, csv, json, count, ids, yaml. Default: table<br><br>## AVAILABLE FIELDS<br><br>These fields will be displayed by default for each widget:<br><br>* name<br>* id<br>* position<br>* options<br><br>There are no optionally available fields.<br><br>## EXAMPLES<br><br> wp widget list sidebar-1 --fields=name --format=csv<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>sidebar-id</params>
  </command>
  <command>
    <name>widget move</name>
    <help><![CDATA[<strong>widget move</strong> &lt;widget-id&gt; [--position=&lt;position&gt;] [--sidebar-id=&lt;sidebar-id&gt;]<br/><br/>Move a widget from one position on a sidebar to another.<br/>&lt;widget-id&gt;<br>: Unique ID for the widget<br><br>[--position=&lt;position&gt;]<br>: Assign the widget to a new position.<br><br>[--sidebar-id=&lt;sidebar-id&gt;]<br>: Assign the widget to a new sidebar<br><br>## EXAMPLES<br><br> wp widget move recent-comments-2 --position=2<br><br> wp widget move recent-comments-2 --sidebar-id=wp_inactive_widgets<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>widget-id</params>
  </command>
  <command>
    <name>widget update</name>
    <help><![CDATA[<strong>widget update</strong> &lt;widget-id&gt; [--&lt;field&gt;=&lt;value&gt;]<br/><br/>Update a given widget's options.<br/>&lt;widget-id&gt;<br>: Unique ID for the widget<br><br>[--&lt;field&gt;=&lt;value&gt;]<br>: Field to update, with its new value<br><br>## EXAMPLES<br><br> wp widget update calendar-1 --title="Calendar"<br><br>## GLOBAL PARAMETERS<br><br> --path=&lt;path&gt;<br> Path to the WordPress files.<br><br> --url=&lt;url&gt;<br> Pretend request came from given URL. In multisite, this argument is how the target site is specified.<br><br> --user=&lt;id|login|email&gt;<br> Set the WordPress user.<br><br> --skip-plugins[=&lt;plugin&gt;]<br> Skip loading all or some plugins. Note: mu-plugins are still loaded.<br><br> --skip-themes[=&lt;theme&gt;]<br> Skip loading all or some themes.<br><br> --skip-packages<br> Skip loading all installed packages.<br><br> --require=&lt;path&gt;<br> Load PHP file before running the command (may be used more than once).<br><br> --[no-]color<br> Whether to colorize the output.<br><br> --debug<br> Show all PHP errors; add verbosity to WP-CLI bootstrap.<br><br> --prompt<br> Prompt the user to enter values for all command arguments.<br><br> --quiet<br> Suppress informational messages.<br><br><br/>]]></help>
    <params>widget-id</params>
  </command>
  <help><![CDATA[<strong>wp</strong><br/>Manage WordPress through the command-line.<br/><br/> ## GLOBAL PARAMETERS --path=<path> Path to the WordPress files. --url=<url> Pretend request came from given URL. In multisite, this argument is how the target site is specified. --user=<id|login|email> Set the WordPress user. --skip-plugins[=<plugin>] Skip loading all or some plugins. Note: mu-plugins are still loaded. --skip-themes[=<theme>] Skip loading all or some themes. --skip-packages Skip loading all installed packages. --require=<path> Load PHP file before running the command (may be used more than once). --[no-]color Whether to colorize the output. --debug Show all PHP errors; add verbosity to WP-CLI bootstrap. --prompt Prompt the user to enter values for all command arguments. --quiet Suppress informational messages. Run 'wp help <command>' to get more information on a specific command. <br/><br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">cache</td></td>Manage the object cache.</td></tr><tr><td valign="baseline">cap</td></td>Manage user capabilities.</td></tr><tr><td valign="baseline">cli</td></td>Get information about WP-CLI itself.</td></tr><tr><td valign="baseline">comment</td></td>Manage comments.</td></tr><tr><td valign="baseline">core</td></td>Download, install, update and otherwise manage WordPress proper.</td></tr><tr><td valign="baseline">cron</td></td>Manage WP-Cron events and schedules.</td></tr><tr><td valign="baseline">db</td></td>Perform basic database operations.</td></tr><tr><td valign="baseline">eval</td></td>Execute arbitrary PHP code.</td></tr><tr><td valign="baseline">eval-file</td></td>Load and execute a PHP file.</td></tr><tr><td valign="baseline">export</td></td>Export content to a WXR file.</td></tr><tr><td valign="baseline">help</td></td>Get help on WP-CLI, or on a specific. command.</td></tr><tr><td valign="baseline">import</td></td>Import content from a WXR file.</td></tr><tr><td valign="baseline">media</td></td>Manage attachments.</td></tr><tr><td valign="baseline">menu</td></td>List, create, assign, and delete menus</td></tr><tr><td valign="baseline">network</td></td></td></tr><tr><td valign="baseline">option</td></td>Manage options.</td></tr><tr><td valign="baseline">package</td></td>Manage WP-CLI packages.</td></tr><tr><td valign="baseline">plugin</td></td>Manage plugins.</td></tr><tr><td valign="baseline">post</td></td>Manage posts.</td></tr><tr><td valign="baseline">post-type</td></td>Manage post types.</td></tr><tr><td valign="baseline">rewrite</td></td>Manage rewrite rules.</td></tr><tr><td valign="baseline">role</td></td>Manage user roles.</td></tr><tr><td valign="baseline">scaffold</td></td>Generate code for post types, taxonomies, etc.</td></tr><tr><td valign="baseline">search-replace</td></td>Search/replace strings in the database.</td></tr><tr><td valign="baseline">server</td></td>Launch PHP's built-in web server for this specific WordPress installation.</td></tr><tr><td valign="baseline">shell</td></td>Interactive PHP console.</td></tr><tr><td valign="baseline">sidebar</td></td>Manage sidebars.</td></tr><tr><td valign="baseline">site</td></td>Perform site-wide operations.</td></tr><tr><td valign="baseline">super-admin</td></td>List, add, and remove super admins from a network.</td></tr><tr><td valign="baseline">taxonomy</td></td>Manage taxonomies.</td></tr><tr><td valign="baseline">term</td></td>Manage terms.</td></tr><tr><td valign="baseline">theme</td></td>Manage themes.</td></tr><tr><td valign="baseline">transient</td></td>Manage transients.</td></tr><tr><td valign="baseline">user</td></td>Manage users.</td></tr><tr><td valign="baseline">widget</td></td>Manage sidebar widgets.</td></tr></table><br/>]]></help>
</framework>

